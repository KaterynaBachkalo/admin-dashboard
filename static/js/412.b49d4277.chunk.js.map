{"version":3,"file":"static/js/412.b49d4277.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/FilterForm/FilterForm.module.css?6686","components/FilterForm/FilterForm.tsx","webpack://my-app/./src/components/Modal/Modal.module.css?28d7","services/closeModals.ts","components/Modal/Modal.tsx","webpack://my-app/./src/components/Pagination/RenderPaginationDots.module.css?6d41","components/Pagination/RenderPaginationDots.tsx","webpack://my-app/./src/components/AllProducts/AddNewProduct/AddNewProduct.module.css?c447","webpack://my-app/./src/components/AllProducts/AddNewProductModal/AddNewProductModal.module.css?2162","webpack://my-app/./src/components/Dropdown/Dropdown.module.css?9e0d","data/categories.ts","components/Dropdown/Dropdown.tsx","components/AllProducts/AddNewProductModal/AddNewProductModal.tsx","components/AllProducts/AddNewProduct/AddNewProduct.tsx","webpack://my-app/./src/components/AllProducts/AllProductsTable/AllProductsTable.module.css?362c","webpack://my-app/./src/components/EditModalProduct/EditModal.module.css?01f3","components/EditModalProduct/EditModal.tsx","webpack://my-app/./src/components/DeleteModal/DeleteModal.module.css?928a","components/DeleteModal/DeleteModal.tsx","components/AllProducts/AllProductsTable/AllProductsTable.tsx","pages/AllProductsPage.tsx","services/closeDropdown.ts","webpack://my-app/./src/pages/ContainerStyles.module.css?0f70"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"FilterForm_wrap__dKOTC\",\"inputWrap\":\"FilterForm_inputWrap__7OFkS\",\"icon\":\"FilterForm_icon__23iPD\",\"input\":\"FilterForm_input__NJviq\",\"errormessage\":\"FilterForm_errormessage__ntEtl\",\"button\":\"FilterForm_button__2yayb\"};","import css from \"./FilterForm.module.css\";\n\nimport { useForm } from \"react-hook-form\";\n\nimport Icon from \"../Icon\";\nimport { FC } from \"react\";\n\ninterface IForms {\n  name: string;\n}\n\ninterface IProps {\n  setSearchQuery: (value: string) => void;\n  placeholder: string;\n}\n\nconst FilterForm: FC<IProps> = ({ setSearchQuery, placeholder }) => {\n  const { register, handleSubmit } = useForm<IForms>();\n\n  const onSubmit = (data: IForms) => {\n    setSearchQuery(data.name);\n  };\n\n  const handleBlur = () => {\n    handleSubmit(onSubmit)();\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div className={css.wrap}>\n        <input\n          {...register(\"name\")}\n          className={css.input}\n          placeholder={placeholder}\n          onBlur={handleBlur}\n        />\n\n        <button type=\"submit\" className={css.button}>\n          <div className={css.icon}>\n            <Icon name=\"filter\" width={14} height={14} />\n          </div>\n          Filter\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default FilterForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Modal_backdrop__xTnIT\",\"container\":\"Modal_container__Ha+Ky\",\"modal\":\"Modal_modal__DJDMv\",\"btnClose\":\"Modal_btnClose__oHdcJ\",\"title\":\"Modal_title__3HkNf\"};","import { useEffect, RefObject } from \"react\";\n\ntype CloseFunction = (value: boolean) => void;\n\nconst useCloseModals = (\n  func: CloseFunction,\n  myRef: RefObject<HTMLElement>,\n  ref?: RefObject<HTMLElement>\n) => {\n  useEffect(() => {\n    const handleKeyDown = (event: globalThis.KeyboardEvent) => {\n      if (event.code === \"Escape\") {\n        func(false);\n      }\n    };\n\n    const handleClose = (event: MouseEvent) => {\n      if (myRef.current && !myRef.current.contains(event.target as Node)) {\n        func(false);\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n    document.addEventListener(\"mousedown\", handleClose);\n    document.body.classList.add(\"body-scroll-lock\");\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n      document.removeEventListener(\"mousedown\", handleClose);\n      document.body.classList.remove(\"body-scroll-lock\");\n    };\n  }, [func, myRef, ref]);\n};\n\nexport default useCloseModals;\n","import { FC, ReactNode, useRef } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport css from \"./Modal.module.css\";\nimport useCloseModals from \"../../services/closeModals\";\nimport Icon from \"../Icon\";\n\nconst modalRoot: Element | null = document.querySelector(\"#root-modal\");\n\ninterface IProps {\n  onClose: (value: boolean) => void;\n  children: ReactNode;\n  title: string;\n}\n\nconst Modal: FC<IProps> = ({ onClose, children, title }) => {\n  const modalRef = useRef<HTMLDivElement | null>(null);\n  useCloseModals(onClose, modalRef);\n\n  return (\n    modalRoot &&\n    createPortal(\n      <div className={css.backdrop}>\n        <div className={css.container}>\n          <div\n            className={css.modal}\n            ref={modalRef}\n            onClick={(event) => event.stopPropagation()}\n          >\n            <button className={css.btnClose} onClick={() => onClose(false)}>\n              <Icon name=\"close\" width={24} height={24} />\n            </button>\n            <div className={css.title}>{title}</div>\n            <div>{children}</div>\n          </div>\n        </div>\n      </div>,\n\n      modalRoot\n    )\n  );\n};\n\nexport default Modal;\n","// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"RenderPaginationDots_pagination__HG7kX\",\"dot\":\"RenderPaginationDots_dot__MjI2h\",\"activeDot\":\"RenderPaginationDots_activeDot__xOgyA\"};","import { FC } from \"react\";\nimport css from \"./RenderPaginationDots.module.css\";\n\ninterface IProps {\n  currentPage: number;\n  total: number;\n  handlePageChange: (value: number) => void;\n}\n\nconst RenderPaginationDots: FC<IProps> = ({\n  currentPage,\n  total,\n  handlePageChange,\n}) => {\n  const totalPages = Math.ceil(total / 5);\n\n  const dots = [];\n  const maxDots = 5;\n  const middleRange = Math.floor(maxDots / 2);\n\n  let start = Math.max(1, currentPage - middleRange);\n  let end = Math.min(totalPages, currentPage + middleRange);\n\n  if (currentPage <= middleRange) {\n    end = Math.min(totalPages, maxDots);\n  } else if (currentPage > totalPages - middleRange) {\n    start = Math.max(1, totalPages - maxDots + 1);\n  }\n\n  for (let page = start; page <= end; page++) {\n    dots.push(\n      <button\n        key={page}\n        onClick={() => handlePageChange(page)}\n        className={`${css.dot} ${currentPage === page ? css.activeDot : \"\"}`}\n      />\n    );\n  }\n\n  if (start > 1) {\n    dots.unshift(<span key=\"startEllipsis\">...</span>);\n    dots.unshift(\n      <button\n        key={1}\n        onClick={() => handlePageChange(1)}\n        className={`${css.dot} ${currentPage === 1 ? css.activeDot : \"\"}`}\n      />\n    );\n  }\n\n  if (end < totalPages) {\n    dots.push(<span key=\"endEllipsis\">...</span>);\n    dots.push(\n      <button\n        key={totalPages}\n        onClick={() => handlePageChange(totalPages)}\n        className={`${css.dot} ${\n          currentPage === totalPages ? css.activeDot : \"\"\n        }`}\n      />\n    );\n  }\n\n  return <div className={css.pagination}>{dots}</div>;\n};\n\nexport default RenderPaginationDots;\n","// extracted by mini-css-extract-plugin\nexport default {\"icon\":\"AddNewProduct_icon__MFMLA\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"AddNewProductModal_wrap__U+mpS\",\"inputWrap\":\"AddNewProductModal_inputWrap__jAL8w\",\"input\":\"AddNewProductModal_input__SF6J9\",\"errormessage\":\"AddNewProductModal_errormessage__sDoOW\",\"iconChevron\":\"AddNewProductModal_iconChevron__edSiP\",\"buttonWrap\":\"AddNewProductModal_buttonWrap__cJclg\",\"buttonAdd\":\"AddNewProductModal_buttonAdd__wSxIX\",\"buttonCancel\":\"AddNewProductModal_buttonCancel__5dJ84\",\"button\":\"AddNewProductModal_button__MYsxS\"};","// extracted by mini-css-extract-plugin\nexport default {\"dropDown\":\"Dropdown_dropDown__VO0hG\",\"container\":\"Dropdown_container__wdJNh\",\"title\":\"Dropdown_title__Gb0r3\",\"list\":\"Dropdown_list__T+o5-\",\"category\":\"Dropdown_category__mKHwx\"};","export const categories = [\n  \"Medicine\",\n  \"Head\",\n  \"Hand\",\n  \"Dental Care\",\n  \"Skin Care\",\n  \"Eye Care\",\n  \"Vitamins & Supplements\",\n  \"Orthopedic Products\",\n  \"Baby Care\",\n];\n","import React, { FC, LegacyRef, RefObject, useRef } from \"react\";\nimport css from \"./Dropdown.module.css\";\nimport useCloseDropdown from \"../../services/closeDropdown\";\nimport { categories } from \"../../data/categories\";\n\ninterface IProps {\n  onSelect: (value: string) => void;\n  onClose: (value: boolean) => void;\n  ref: LegacyRef<HTMLDivElement>;\n}\n\nconst Dropdown: FC<IProps> = React.forwardRef(({ onSelect, onClose }, ref) => {\n  const handleClick = (selectedCategory: string) => {\n    onSelect(selectedCategory);\n  };\n\n  const inputRef = useRef(null);\n\n  useCloseDropdown(onClose, inputRef, ref as RefObject<HTMLDivElement>);\n\n  return (\n    <div className={css.dropDown} ref={inputRef}>\n      <div className={css.container}>\n        <ul className={css.list}>\n          {categories.map((category) => (\n            <li\n              key={category}\n              onClick={() => handleClick(category)}\n              className={css.category}\n            >\n              {category}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n});\n\nexport default Dropdown;\n","import { FC, useEffect, useRef, useState } from \"react\";\nimport css from \"./AddNewProductModal.module.css\";\nimport Icon from \"../../Icon\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Dropdown from \"../../Dropdown/Dropdown\";\nimport { useDispatch } from \"react-redux\";\nimport { addProduct } from \"../../../redux/admin/operation\";\nimport { AppDispatch } from \"../../../redux/store\";\nimport { IProductsToBD } from \"../../../types\";\n\ninterface AddModalProps {\n  onClose: () => void;\n}\n\ninterface IForms {\n  name: string;\n  category: string;\n  suppliers: string;\n  stock: string;\n  price: string;\n}\n\nconst AddNewProductModal: FC<AddModalProps> = ({ onClose }) => {\n  const [isOpenDropdown, setOpenDropdown] = useState(false);\n  const [selectedFilter, setSelectedFilter] = useState(\"\");\n  const [stock, setStock] = useState<string>(\"\");\n  const [price, setPrice] = useState<string>(\"\");\n\n  const iconref = useRef<HTMLDivElement | null>(null);\n\n  const dispatch = useDispatch<AppDispatch>();\n\n  const schema = yup\n    .object({\n      name: yup.string().required(\"Product info is required\"),\n      category: yup.string().required(\"Category is required\"),\n      suppliers: yup.string().required(\"Suppliers is required\"),\n      stock: yup\n        .string()\n        .matches(/^\\d*\\.?\\d*$/, \"Stock must be a valid number\")\n        .required(\"Stock is required\"),\n      price: yup\n        .string()\n        .matches(/^\\d*\\.?\\d*$/, \"Price must be a valid number\")\n        .required(\"Price is required\"),\n    })\n    .required();\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    setValue,\n    formState: { errors },\n  } = useForm<IForms>({\n    resolver: yupResolver(schema),\n  });\n\n  useEffect(() => {\n    setValue(\"category\", selectedFilter);\n  }, [selectedFilter, setValue]);\n\n  const onSubmit = (data: IForms) => {\n    const newProduct: IProductsToBD = {\n      name: data.name,\n      category: data.category,\n      suppliers: data.suppliers,\n      stock: data.stock.toString(),\n      price: data.price.toString(),\n    };\n\n    dispatch(addProduct(newProduct));\n    onClose();\n  };\n\n  const handleSelect = (selected: string) => {\n    setSelectedFilter(selected);\n    setOpenDropdown(false);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className={css.wrap}>\n          <div>\n            <input\n              {...register(\"name\")}\n              className={css.input}\n              placeholder=\"Product info\"\n            />\n            <p className={css.errormessage}>{errors.name?.message}</p>\n          </div>\n\n          <div className={css.inputWrap}>\n            <Controller\n              name=\"category\"\n              control={control}\n              render={({ field }) => (\n                <input\n                  {...field}\n                  className={css.input}\n                  placeholder=\"Category\"\n                  value={selectedFilter}\n                />\n              )}\n            />\n            {!selectedFilter && (\n              <p className={css.errormessage}>{errors.category?.message}</p>\n            )}\n\n            <div\n              className={css.iconChevron}\n              onClick={() => setOpenDropdown(!isOpenDropdown)}\n              ref={iconref}\n            >\n              <Icon name=\"chevron-down\" width={16} height={16} />\n            </div>\n            {isOpenDropdown && (\n              <Dropdown\n                onSelect={handleSelect}\n                onClose={setOpenDropdown}\n                ref={iconref}\n              />\n            )}\n          </div>\n\n          <div>\n            <input\n              {...register(\"suppliers\")}\n              className={css.input}\n              placeholder=\"Suppliers\"\n            />\n            <p className={css.errormessage}>{errors.suppliers?.message}</p>\n          </div>\n\n          <div>\n            <Controller\n              name=\"stock\"\n              control={control}\n              render={({ field }) => (\n                <input\n                  {...field}\n                  className={css.input}\n                  placeholder=\"Stock\"\n                  type=\"text\"\n                  value={stock}\n                  onChange={(e) => {\n                    const value = e.target.value.replace(\",\", \".\");\n                    if (/^\\d*\\.?\\d*$/.test(value)) {\n                      setStock(value);\n                      field.onChange(value);\n                    }\n                  }}\n                />\n              )}\n            />\n            <p className={css.errormessage}>{errors.stock?.message}</p>\n          </div>\n\n          <div>\n            <Controller\n              name=\"price\"\n              control={control}\n              render={({ field }) => (\n                <input\n                  {...field}\n                  className={css.input}\n                  placeholder=\"Price\"\n                  type=\"text\"\n                  value={price}\n                  onChange={(e) => {\n                    const value = e.target.value.replace(\",\", \".\");\n                    if (/^\\d*\\.?\\d*$/.test(value)) {\n                      setPrice(value);\n                      field.onChange(value);\n                    }\n                  }}\n                />\n              )}\n            />\n\n            <p className={css.errormessage}>{errors.price?.message}</p>\n          </div>\n        </div>\n\n        <div className={css.buttonWrap}>\n          <button type=\"submit\" className={css.buttonAdd}>\n            Add\n          </button>\n\n          <button type=\"button\" className={css.buttonCancel} onClick={onClose}>\n            Cancel\n          </button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default AddNewProductModal;\n","import css from \"./AddNewProduct.module.css\";\nimport Icon from \"../../Icon\";\nimport { useState } from \"react\";\nimport Modal from \"../../Modal/Modal\";\nimport AddNewProductModal from \"../AddNewProductModal/AddNewProductModal\";\n\nconst AddNewProduct = () => {\n  const [isOpenModal, setOpenModal] = useState(false);\n\n  const closeAddModal = () => {\n    setOpenModal(false);\n  };\n\n  return (\n    <>\n      <div className={css.icon} onClick={() => setOpenModal(true)}>\n        <Icon name=\"add\" width={20} height={20} />\n      </div>\n\n      {isOpenModal && (\n        <Modal onClose={closeAddModal} title=\"Add a new product\">\n          <AddNewProductModal onClose={closeAddModal} />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default AddNewProduct;\n","// extracted by mini-css-extract-plugin\nexport default {\"table\":\"AllProductsTable_table__RucKg\",\"header\":\"AllProductsTable_header__L8aca\",\"subheader\":\"AllProductsTable_subheader__AUKOw\",\"row\":\"AllProductsTable_row__-xfsz\",\"cellWrap\":\"AllProductsTable_cellWrap__PhHoL\",\"avatar\":\"AllProductsTable_avatar__KixhJ\",\"noResults\":\"AllProductsTable_noResults__dcB5-\",\"col-info\":\"AllProductsTable_col-info__KTKqG\",\"col-category\":\"AllProductsTable_col-category__K37vU\",\"col-stock\":\"AllProductsTable_col-stock__7Jp11\",\"buttonsWrap\":\"AllProductsTable_buttonsWrap__S3MdH\",\"buttonEdit\":\"AllProductsTable_buttonEdit__yCkyO\",\"buttonDelete\":\"AllProductsTable_buttonDelete__hTPUZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"EditModal_wrap__6LjQN\",\"inputWrap\":\"EditModal_inputWrap__8rLVE\",\"input\":\"EditModal_input__DemmQ\",\"errormessage\":\"EditModal_errormessage__Twc9m\",\"iconChevron\":\"EditModal_iconChevron__Y44qd\",\"buttonWrap\":\"EditModal_buttonWrap__wH5ct\",\"buttonAdd\":\"EditModal_buttonAdd__MgbNJ\",\"buttonCancel\":\"EditModal_buttonCancel__nZEvv\",\"button\":\"EditModal_button__T3lwL\"};","import { FC, useEffect, useRef, useState } from \"react\";\nimport css from \"./EditModal.module.css\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Icon from \"../Icon\";\nimport Dropdown from \"../Dropdown/Dropdown\";\nimport { IProducts } from \"../../types\";\nimport { useDispatch } from \"react-redux\";\nimport { AppDispatch } from \"../../redux/store\";\nimport { editProduct } from \"../../redux/admin/operation\";\nimport { toast } from \"react-toastify\";\n\ninterface EditModalProps {\n  data: IProducts;\n  onClose: () => void;\n}\n\ninterface IForms {\n  name: string;\n  category: string;\n  suppliers: string;\n  stock: number;\n  price: number;\n}\n\nconst EditModal: FC<EditModalProps> = ({ data, onClose }) => {\n  const [isOpenDropdown, setOpenDropdown] = useState(false);\n  const [selectedFilter, setSelectedFilter] = useState(data.category);\n\n  const iconref = useRef<HTMLDivElement | null>(null);\n\n  const dispatch = useDispatch<AppDispatch>();\n\n  const schema = yup\n    .object({\n      name: yup.string().required(\"Product info is required\"),\n      category: yup.string().required(\"Category is required\"),\n      suppliers: yup.string().required(\"Suppliers is required\"),\n      stock: yup\n        .number()\n        .typeError(\"Stock is required and must be a number\")\n        .required(),\n      price: yup\n        .number()\n        .typeError(\"Price is required and must be a number\")\n        .required(),\n    })\n    .required();\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    setValue,\n    formState: { errors },\n  } = useForm<IForms>({\n    resolver: yupResolver(schema),\n    defaultValues: {\n      name: data.name,\n      category: data.category,\n      suppliers: data.suppliers,\n      stock: Number(data.stock),\n      price: Number(data.price),\n    },\n  });\n\n  const onSubmit = (formData: IForms) => {\n    const updatedProduct: IProducts = {\n      ...data,\n      name: formData.name,\n      category: formData.category,\n      suppliers: formData.suppliers,\n      stock: formData.stock.toString(),\n      price: formData.price.toString(),\n    };\n    const { _id, ...updateData } = updatedProduct;\n\n    dispatch(editProduct({ _id: data._id, ...updateData }));\n    toast.success(\"The product was successfully updated\");\n    onClose();\n  };\n\n  const handleSelect = (selected: string) => {\n    setSelectedFilter(selected);\n    setOpenDropdown(false);\n  };\n\n  useEffect(() => {\n    setValue(\"category\", selectedFilter);\n  }, [selectedFilter, setValue]);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className={css.wrap}>\n          <div>\n            <input\n              {...register(\"name\")}\n              className={css.input}\n              placeholder=\"Product info\"\n            />\n            <p className={css.errormessage}>{errors.name?.message}</p>\n          </div>\n\n          <div className={css.inputWrap}>\n            <Controller\n              name=\"category\"\n              control={control}\n              render={({ field }) => (\n                <input\n                  {...field}\n                  className={css.input}\n                  placeholder=\"Category\"\n                  value={selectedFilter}\n                  onChange={(e) => setSelectedFilter(e.target.value)}\n                />\n              )}\n            />\n            <p className={css.errormessage}>{errors.category?.message}</p>\n\n            <div\n              className={css.iconChevron}\n              onClick={() => setOpenDropdown(!isOpenDropdown)}\n              ref={iconref}\n            >\n              <Icon name=\"chevron-down\" width={16} height={16} />\n            </div>\n            {isOpenDropdown && (\n              <Dropdown\n                onSelect={handleSelect}\n                onClose={setOpenDropdown}\n                ref={iconref}\n              />\n            )}\n          </div>\n\n          <div>\n            <input\n              {...register(\"suppliers\")}\n              className={css.input}\n              placeholder=\"Suppliers\"\n            />\n            <p className={css.errormessage}>{errors.suppliers?.message}</p>\n          </div>\n\n          <div>\n            <Controller\n              name=\"stock\"\n              control={control}\n              render={({ field }) => (\n                <input\n                  {...field}\n                  className={css.input}\n                  placeholder=\"Stock\"\n                  type=\"number\"\n                  onChange={(e) => {\n                    const value = e.target.value.replace(\",\", \".\");\n                    field.onChange(value);\n                  }}\n                />\n              )}\n            />\n            <p className={css.errormessage}>{errors.stock?.message}</p>\n          </div>\n\n          <div>\n            <Controller\n              name=\"price\"\n              control={control}\n              render={({ field }) => (\n                <input\n                  {...field}\n                  className={css.input}\n                  placeholder=\"Price\"\n                  type=\"number\"\n                  onChange={(e) => {\n                    const value = e.target.value.replace(\",\", \".\");\n                    field.onChange(value);\n                  }}\n                />\n              )}\n            />\n\n            <p className={css.errormessage}>{errors.price?.message}</p>\n          </div>\n        </div>\n\n        <div className={css.buttonWrap}>\n          <button type=\"submit\" className={css.buttonAdd}>\n            Edit\n          </button>\n\n          <button type=\"button\" className={css.buttonCancel} onClick={onClose}>\n            Cancel\n          </button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default EditModal;\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"DeleteModal_text__Uq4Ab\",\"buttonWrap\":\"DeleteModal_buttonWrap__Xs998\",\"buttonDelete\":\"DeleteModal_buttonDelete__pHkcD\",\"buttonCancel\":\"DeleteModal_buttonCancel__IoVJ7\"};","import { FC } from \"react\";\nimport css from \"./DeleteModal.module.css\";\nimport { IProducts } from \"../../types\";\n\ninterface DeleteModalProps {\n  data: IProducts;\n  onClose: () => void;\n  handleDelete: () => void;\n}\n\nconst DeleteModal: FC<DeleteModalProps> = ({ data, onClose, handleDelete }) => {\n  return (\n    <>\n      <p className={css.text}>Are you sure you want to delete {data.name}?</p>\n      <div className={css.buttonWrap}>\n        <button\n          type=\"submit\"\n          className={css.buttonDelete}\n          onClick={handleDelete}\n        >\n          Delete\n        </button>\n\n        <button type=\"button\" className={css.buttonCancel} onClick={onClose}>\n          Cancel\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default DeleteModal;\n","import {\n  getCoreRowModel,\n  ColumnDef,\n  flexRender,\n  useReactTable,\n} from \"@tanstack/react-table\";\nimport css from \"./AllProductsTable.module.css\";\nimport { useMemo, useState } from \"react\";\nimport Icon from \"../../Icon\";\nimport Modal from \"../../Modal/Modal\";\nimport EditModal from \"../../EditModalProduct/EditModal\";\nimport DeleteModal from \"../../DeleteModal/DeleteModal\";\nimport { useSelector } from \"react-redux\";\nimport { selectProducts } from \"../../../redux/admin/selectors\";\nimport { useDispatch } from \"react-redux\";\nimport { AppDispatch } from \"../../../redux/store\";\nimport { deleteProduct } from \"../../../redux/admin/operation\";\nimport { IProducts } from \"../../../types\";\nimport { toast } from \"react-toastify\";\n\nconst AllProductsTable = ({ searchQuery }: { searchQuery: string }) => {\n  const products = useSelector(selectProducts);\n\n  const dispatch = useDispatch<AppDispatch>();\n\n  const columns: ColumnDef<IProducts>[] = [\n    {\n      header: \"All products\",\n      footer: (props) => props.column.id,\n      columns: [\n        {\n          accessorKey: \"name\",\n          header: \"Product Info\",\n          footer: (props) => props.column.id,\n        },\n        {\n          accessorKey: \"category\",\n          header: \"Category\",\n          footer: (props) => props.column.id,\n        },\n        {\n          accessorKey: \"stock\",\n          header: \"Stock\",\n          footer: (props) => props.column.id,\n        },\n        {\n          accessorKey: \"suppliers\",\n          header: \"Suppliers\",\n          footer: (props) => props.column.id,\n        },\n        {\n          accessorKey: \"price\",\n          header: \"Price\",\n          footer: (props) => props.column.id,\n        },\n        {\n          accessorKey: \"action\",\n          header: \"Action\",\n          cell: ({ row }) => (\n            <div className={css.buttonsWrap}>\n              <div\n                className={css.buttonEdit}\n                onClick={() => openEditModal(row.original)}\n              >\n                <Icon name=\"edit\" width={13} height={13} />\n              </div>\n              <div\n                className={css.buttonDelete}\n                onClick={() => openDeleteModal(row.original)}\n              >\n                <Icon name=\"delete\" width={13} height={13} />\n              </div>\n            </div>\n          ),\n          footer: (props) => props.column.id,\n        },\n      ],\n    },\n  ];\n\n  const data = useMemo(() => {\n    return products.filter((product) => !product.hasOwnProperty(\"seq_value\"));\n  }, [products]);\n\n  const [editModalData, setEditModalData] = useState<IProducts | null>(null);\n  const [deleteModalData, setDeleteModalData] = useState<IProducts | null>(\n    null\n  );\n\n  const openEditModal = (rowData: IProducts) => {\n    setEditModalData(rowData);\n  };\n\n  const openDeleteModal = (rowData: IProducts) => {\n    setDeleteModalData(rowData);\n  };\n\n  const closeEditModal = () => {\n    setEditModalData(null);\n  };\n\n  const closeDeleteModal = () => {\n    setDeleteModalData(null);\n  };\n\n  const table = useReactTable({\n    data,\n    columns,\n    enableColumnResizing: true,\n    columnResizeMode: \"onChange\",\n    getCoreRowModel: getCoreRowModel(),\n  });\n\n  const handleDelete = (_id: string) => {\n    dispatch(deleteProduct(_id));\n    toast.success(\"The product is successfully deleted\");\n    closeDeleteModal();\n  };\n\n  return (\n    <>\n      <table className={css.table}>\n        <thead>\n          {table.getHeaderGroups().map((headerGroup, index) => (\n            <tr\n              key={headerGroup.id}\n              className={index === 0 ? css.header : css.subheader}\n            >\n              {headerGroup.headers.map((header) => (\n                <th\n                  key={header.id}\n                  colSpan={header.colSpan}\n                  className={index === 0 ? css.header : css.subheader}\n                  style={{ width: header.getSize() }}\n                >\n                  {header.isPlaceholder\n                    ? null\n                    : flexRender(\n                        header.column.columnDef.header,\n                        header.getContext()\n                      )}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody>\n          {table.getRowModel().rows.map((row) => {\n            return (\n              <tr key={row.id}>\n                {row.getVisibleCells().map((cell) => {\n                  return (\n                    <td\n                      key={cell.id}\n                      className={`${css.row} ${\n                        cell.column.id === \"name\"\n                          ? css[\"col-info\"]\n                          : cell.column.id === \"category\"\n                          ? css[\"col-category\"]\n                          : cell.column.id === \"stock\"\n                          ? css[\"col-stock\"]\n                          : \"\"\n                      }`}\n                      style={{ width: cell.column.getSize() }}\n                    >\n                      {flexRender(\n                        cell.column.columnDef.cell,\n                        cell.getContext()\n                      )}\n                    </td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n\n      {data.length === 0 && (\n        <div className={css.noResults}>\n          No results found for your search query.\n        </div>\n      )}\n\n      {editModalData && (\n        <Modal onClose={closeEditModal} title=\"Edit product\">\n          <EditModal onClose={closeEditModal} data={editModalData} />\n        </Modal>\n      )}\n      {deleteModalData && (\n        <Modal onClose={closeDeleteModal} title=\"Delete Product\">\n          <DeleteModal\n            onClose={closeDeleteModal}\n            data={deleteModalData}\n            handleDelete={() => handleDelete(deleteModalData._id)}\n          />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default AllProductsTable;\n","import { useEffect, useState } from \"react\";\nimport FilterForm from \"../components/FilterForm/FilterForm\";\nimport css from \"./ContainerStyles.module.css\";\nimport AddNewProduct from \"../components/AllProducts/AddNewProduct/AddNewProduct\";\nimport AllProductsTable from \"../components/AllProducts/AllProductsTable/AllProductsTable\";\nimport { useDispatch } from \"react-redux\";\nimport { AppDispatch } from \"../redux/store\";\nimport { useSelector } from \"react-redux\";\nimport {\n  selectCurrentPage,\n  selectTotalProducts,\n} from \"../redux/admin/selectors\";\nimport { fetchProducts } from \"../redux/admin/operation\";\nimport RenderPaginationDots from \"../components/Pagination/RenderPaginationDots\";\nimport { setCurrentPage } from \"../redux/admin/adminSlice\";\n\nconst AllProductsPage = () => {\n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\n  const dispatch = useDispatch<AppDispatch>();\n  const currentPage = useSelector(selectCurrentPage);\n\n  const totalProducts = useSelector(selectTotalProducts);\n\n  const handlePageChange = (newPage: number) => {\n    dispatch(setCurrentPage(newPage));\n  };\n\n  useEffect(() => {\n    const params: { page: number; limit: number; name?: string } = {\n      page: currentPage,\n      limit: 5,\n      ...(searchQuery && { name: searchQuery }),\n    };\n\n    dispatch(fetchProducts(params));\n  }, [currentPage, dispatch, searchQuery]);\n\n  useEffect(() => {\n    dispatch(setCurrentPage(1));\n  }, [searchQuery, dispatch]);\n\n  return (\n    <section className={css.container}>\n      <FilterForm setSearchQuery={setSearchQuery} placeholder=\"Product Name\" />\n      <AddNewProduct />\n      <AllProductsTable searchQuery={searchQuery} />\n      <RenderPaginationDots\n        currentPage={currentPage}\n        total={totalProducts - 1}\n        handlePageChange={handlePageChange}\n      />\n    </section>\n  );\n};\n\nexport default AllProductsPage;\n","import { useEffect, RefObject } from \"react\";\n\ntype CloseFunction = (value: boolean) => void;\n\nconst useCloseDropdown = (\n  func: CloseFunction,\n  myRef: RefObject<HTMLElement>,\n  ref?: RefObject<HTMLElement>\n) => {\n  useEffect(() => {\n    const handleKeyDown = (event: globalThis.KeyboardEvent) => {\n      if (event.code === \"Escape\") {\n        func(false);\n      }\n    };\n\n    const handleClose = (event: MouseEvent) => {\n      if (\n        myRef.current &&\n        !myRef.current.contains(event.target as Node) &&\n        ref?.current &&\n        !ref?.current.contains(event.target as Node)\n      ) {\n        func(false);\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n    document.addEventListener(\"mousedown\", handleClose);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n      document.removeEventListener(\"mousedown\", handleClose);\n    };\n  }, [func, myRef, ref]);\n};\n\nexport default useCloseDropdown;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContainerStyles_container__c-Ay4\",\"wrap\":\"ContainerStyles_wrap__Zujzm\"};"],"names":["_ref","setSearchQuery","placeholder","register","handleSubmit","useForm","onSubmit","data","name","_jsx","children","_jsxs","className","css","onBlur","handleBlur","type","Icon","width","height","useCloseModals","func","myRef","ref","useEffect","handleKeyDown","event","code","handleClose","current","contains","target","window","addEventListener","document","body","classList","add","removeEventListener","remove","modalRoot","querySelector","onClose","title","modalRef","useRef","createPortal","onClick","stopPropagation","currentPage","total","handlePageChange","totalPages","Math","ceil","dots","middleRange","floor","maxDots","start","max","end","min","page","push","concat","unshift","categories","React","onSelect","inputRef","useCloseDropdown","map","category","_errors$name","_errors$category","_errors$suppliers","_errors$stock","_errors$price","isOpenDropdown","setOpenDropdown","useState","selectedFilter","setSelectedFilter","stock","setStock","price","setPrice","iconref","dispatch","useDispatch","schema","yup","required","suppliers","matches","control","setValue","formState","errors","resolver","yupResolver","_Fragment","newProduct","toString","addProduct","message","Controller","render","_ref2","field","value","Dropdown","selected","_ref3","onChange","e","replace","test","_ref4","AddNewProduct","isOpenModal","setOpenModal","closeAddModal","Modal","AddNewProductModal","typeError","defaultValues","Number","formData","updatedProduct","_id","updateData","editProduct","toast","success","handleDelete","searchQuery","products","useSelector","selectProducts","columns","header","footer","props","column","id","accessorKey","cell","row","openEditModal","original","openDeleteModal","useMemo","filter","product","hasOwnProperty","editModalData","setEditModalData","deleteModalData","setDeleteModalData","rowData","closeEditModal","closeDeleteModal","table","useReactTable","enableColumnResizing","columnResizeMode","getCoreRowModel","getHeaderGroups","headerGroup","index","headers","colSpan","style","getSize","isPlaceholder","flexRender","columnDef","getContext","getRowModel","rows","getVisibleCells","length","EditModal","DeleteModal","deleteProduct","AllProductsPage","selectCurrentPage","totalProducts","selectTotalProducts","params","limit","fetchProducts","setCurrentPage","container","FilterForm","AllProductsTable","RenderPaginationDots","newPage"],"sourceRoot":""}