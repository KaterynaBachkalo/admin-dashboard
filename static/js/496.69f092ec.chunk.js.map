{"version":3,"file":"static/js/496.69f092ec.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/FilterForm/FilterForm.module.css?6686","components/FilterForm/FilterForm.tsx","webpack://my-app/./src/components/Pagination/RenderPaginationDots.module.css?6d41","components/Pagination/RenderPaginationDots.tsx","webpack://my-app/./src/components/AllOrders/AllOrdersTable.module.css?b98b","components/AllOrders/AllOrdersTable.tsx","pages/AllOrdersPage.tsx","webpack://my-app/./src/pages/ContainerStyles.module.css?0f70"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"FilterForm_wrap__dKOTC\",\"inputWrap\":\"FilterForm_inputWrap__7OFkS\",\"icon\":\"FilterForm_icon__23iPD\",\"input\":\"FilterForm_input__NJviq\",\"errormessage\":\"FilterForm_errormessage__ntEtl\",\"button\":\"FilterForm_button__2yayb\"};","import css from \"./FilterForm.module.css\";\n\nimport { useForm } from \"react-hook-form\";\n\nimport Icon from \"../Icon\";\nimport { FC } from \"react\";\n\ninterface IForms {\n  name: string;\n}\n\ninterface IProps {\n  setSearchQuery: (value: string) => void;\n  placeholder: string;\n}\n\nconst FilterForm: FC<IProps> = ({ setSearchQuery, placeholder }) => {\n  const { register, handleSubmit } = useForm<IForms>();\n\n  const onSubmit = (data: IForms) => {\n    setSearchQuery(data.name);\n  };\n\n  const handleBlur = () => {\n    handleSubmit(onSubmit)();\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div className={css.wrap}>\n        <input\n          {...register(\"name\")}\n          className={css.input}\n          placeholder={placeholder}\n          onBlur={handleBlur}\n        />\n\n        <button type=\"submit\" className={css.button}>\n          <div className={css.icon}>\n            <Icon name=\"filter\" width={14} height={14} />\n          </div>\n          Filter\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default FilterForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"RenderPaginationDots_pagination__HG7kX\",\"dot\":\"RenderPaginationDots_dot__MjI2h\",\"activeDot\":\"RenderPaginationDots_activeDot__xOgyA\"};","import { FC } from \"react\";\nimport css from \"./RenderPaginationDots.module.css\";\n\ninterface IProps {\n  currentPage: number;\n  total: number;\n  handlePageChange: (value: number) => void;\n}\n\nconst RenderPaginationDots: FC<IProps> = ({\n  currentPage,\n  total,\n  handlePageChange,\n}) => {\n  const totalPages = Math.ceil(total / 5);\n\n  const dots = [];\n  const maxDots = 5;\n  const middleRange = Math.floor(maxDots / 2);\n\n  let start = Math.max(1, currentPage - middleRange);\n  let end = Math.min(totalPages, currentPage + middleRange);\n\n  if (currentPage <= middleRange) {\n    end = Math.min(totalPages, maxDots);\n  } else if (currentPage > totalPages - middleRange) {\n    start = Math.max(1, totalPages - maxDots + 1);\n  }\n\n  for (let page = start; page <= end; page++) {\n    dots.push(\n      <button\n        key={page}\n        onClick={() => handlePageChange(page)}\n        className={`${css.dot} ${currentPage === page ? css.activeDot : \"\"}`}\n      />\n    );\n  }\n\n  if (start > 1) {\n    dots.unshift(<span key=\"startEllipsis\">...</span>);\n    dots.unshift(\n      <button\n        key={1}\n        onClick={() => handlePageChange(1)}\n        className={`${css.dot} ${currentPage === 1 ? css.activeDot : \"\"}`}\n      />\n    );\n  }\n\n  if (end < totalPages) {\n    dots.push(<span key=\"endEllipsis\">...</span>);\n    dots.push(\n      <button\n        key={totalPages}\n        onClick={() => handlePageChange(totalPages)}\n        className={`${css.dot} ${\n          currentPage === totalPages ? css.activeDot : \"\"\n        }`}\n      />\n    );\n  }\n\n  return <div className={css.pagination}>{dots}</div>;\n};\n\nexport default RenderPaginationDots;\n","// extracted by mini-css-extract-plugin\nexport default {\"table\":\"AllOrdersTable_table__eg4Km\",\"header\":\"AllOrdersTable_header__TUYb0\",\"subheader\":\"AllOrdersTable_subheader__cVIX4\",\"row\":\"AllOrdersTable_row__b6KmQ\",\"cellWrap\":\"AllOrdersTable_cellWrap__ivanM\",\"avatar\":\"AllOrdersTable_avatar__ta6qG\",\"noResults\":\"AllOrdersTable_noResults__0-EjW\",\"col-name\":\"AllOrdersTable_col-name__v+qUW\",\"col-address\":\"AllOrdersTable_col-address__a-ocr\",\"col-products\":\"AllOrdersTable_col-products__POkWb\",\"greenStatus\":\"AllOrdersTable_greenStatus__nPDBW\",\"violetStatus\":\"AllOrdersTable_violetStatus__Bs5up\",\"orangeStatus\":\"AllOrdersTable_orangeStatus__4pRNE\",\"blueStatus\":\"AllOrdersTable_blueStatus__WY-Ck\",\"redStatus\":\"AllOrdersTable_redStatus__I3SJ3\",\"darkgreenStatus\":\"AllOrdersTable_darkgreenStatus__XIcb+\",\"roseStatus\":\"AllOrdersTable_roseStatus__vVaTa\"};","import {\n  getCoreRowModel,\n  ColumnDef,\n  flexRender,\n  useReactTable,\n} from \"@tanstack/react-table\";\nimport css from \"./AllOrdersTable.module.css\";\nimport { useMemo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectIsLoading, selectOrders } from \"../../redux/admin/selectors\";\nimport Loader from \"../Loader/Loader\";\n\ninterface Person {\n  name: string;\n  photo: string;\n  address: string;\n  products: string;\n  order_date: string;\n  price: string;\n  status: string;\n}\n\nconst columns: ColumnDef<Person>[] = [\n  {\n    header: \"All orders\",\n    footer: (props) => props.column.id,\n    columns: [\n      {\n        accessorKey: \"name\",\n        header: \"User Info\",\n        cell: ({ row }) => (\n          <div className={css.cellWrap}>\n            <img\n              src={row.original.photo}\n              alt={row.original.name}\n              className={css.avatar}\n            />\n            {row.original.name}\n          </div>\n        ),\n        footer: (props) => props.column.id,\n      },\n      {\n        accessorKey: \"address\",\n        header: \"Address\",\n        footer: (props) => props.column.id,\n      },\n      {\n        accessorKey: \"products\",\n        header: \"Products\",\n        footer: (props) => props.column.id,\n      },\n      {\n        accessorKey: \"order_date\",\n        header: \"Order date\",\n        footer: (props) => props.column.id,\n      },\n      {\n        accessorKey: \"price\",\n        header: \"Price\",\n        footer: (props) => props.column.id,\n      },\n      {\n        accessorKey: \"status\",\n        header: \"Status\",\n        footer: (props) => props.column.id,\n      },\n    ],\n  },\n];\n\nconst AllOrdersTable = ({ searchQuery }: { searchQuery: string }) => {\n  const isLoading = useSelector(selectIsLoading);\n\n  const orders = useSelector(selectOrders);\n\n  const data = useMemo(() => orders, [orders]);\n\n  const table = useReactTable({\n    data,\n    columns,\n    enableColumnResizing: true,\n    columnResizeMode: \"onChange\",\n    getCoreRowModel: getCoreRowModel(),\n  });\n\n  const getClassByStatus = (status: string) => {\n    if (status === \"Completed\") return css.greenStatus;\n    if (status === \"Confirmed\") return css.violetStatus;\n    if (status === \"Pending\") return css.orangeStatus;\n    if (status === \"Processing\") return css.blueStatus;\n    if (status === \"Cancelled\") return css.redStatus;\n    if (status === \"Shipped\") return css.roseStatus;\n    return css.darkgreenStatus;\n  };\n\n  return (\n    <>\n      <table className={css.table}>\n        <thead>\n          {table.getHeaderGroups().map((headerGroup, index) => (\n            <tr\n              key={headerGroup.id}\n              className={index === 0 ? css.header : css.subheader}\n            >\n              {headerGroup.headers.map((header) => (\n                <th\n                  key={header.id}\n                  colSpan={header.colSpan}\n                  className={index === 0 ? css.header : css.subheader}\n                >\n                  {header.isPlaceholder\n                    ? null\n                    : flexRender(\n                        header.column.columnDef.header,\n                        header.getContext()\n                      )}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody>\n          {table.getRowModel().rows.map((row) => {\n            return (\n              <tr key={row.id}>\n                {row.getVisibleCells().map((cell) => {\n                  return (\n                    <td\n                      key={cell.id}\n                      className={`${css.row} ${\n                        cell.column.id === \"name\"\n                          ? css[\"col-name\"]\n                          : cell.column.id === \"address\"\n                          ? css[\"col-address\"]\n                          : cell.column.id === \"products\"\n                          ? css[\"col-products\"]\n                          : \"\"\n                      }`}\n                      style={{ width: cell.column.getSize() }}\n                    >\n                      {cell.column.id === \"status\" ? (\n                        <span className={getClassByStatus(row.original.status)}>\n                          {row.original.status}\n                        </span>\n                      ) : (\n                        flexRender(\n                          cell.column.columnDef.cell,\n                          cell.getContext()\n                        )\n                      )}\n                    </td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n\n      {isLoading && data.length === 0 && <Loader />}\n\n      {!isLoading && data.length === 0 && (\n        <div className={css.noResults}>\n          No results found for your search query.\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default AllOrdersTable;\n","import React, { useEffect, useState } from \"react\";\nimport css from \"./ContainerStyles.module.css\";\nimport FilterForm from \"../components/FilterForm/FilterForm\";\nimport AllOrdersTable from \"../components/AllOrders/AllOrdersTable\";\nimport { useDispatch } from \"react-redux\";\nimport { AppDispatch } from \"../redux/store\";\nimport { fetchOrders } from \"../redux/admin/operation\";\nimport { useSelector } from \"react-redux\";\nimport { selectCurrentPage, selectTotalOrders } from \"../redux/admin/selectors\";\nimport RenderPaginationDots from \"../components/Pagination/RenderPaginationDots\";\nimport { setCurrentPage } from \"../redux/admin/adminSlice\";\n\nconst AllOrdersPage = () => {\n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\n\n  const dispatch = useDispatch() as AppDispatch;\n  const currentPage = useSelector(selectCurrentPage);\n\n  const totalOrders = useSelector(selectTotalOrders);\n\n  const handlePageChange = (newPage: number) => {\n    dispatch(setCurrentPage(newPage));\n  };\n\n  useEffect(() => {\n    const params: { page: number; limit: number; name?: string } = {\n      page: currentPage,\n      limit: 5,\n      ...(searchQuery && { name: searchQuery }),\n    };\n\n    dispatch(fetchOrders(params));\n  }, [currentPage, dispatch, searchQuery]);\n\n  useEffect(() => {\n    dispatch(setCurrentPage(1));\n  }, [searchQuery, dispatch]);\n\n  return (\n    <section className={css.container}>\n      <FilterForm setSearchQuery={setSearchQuery} placeholder=\"User name\" />\n      <AllOrdersTable searchQuery={searchQuery} />\n      <RenderPaginationDots\n        currentPage={currentPage}\n        total={totalOrders}\n        handlePageChange={handlePageChange}\n      />\n    </section>\n  );\n};\n\nexport default AllOrdersPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContainerStyles_container__c-Ay4\",\"wrap\":\"ContainerStyles_wrap__Zujzm\"};"],"names":["_ref","setSearchQuery","placeholder","register","handleSubmit","useForm","onSubmit","data","name","_jsx","children","_jsxs","className","css","onBlur","handleBlur","type","Icon","width","height","currentPage","total","handlePageChange","totalPages","Math","ceil","dots","middleRange","floor","maxDots","start","max","end","min","page","push","onClick","concat","unshift","columns","header","footer","props","column","id","accessorKey","cell","row","src","original","photo","alt","_ref2","searchQuery","isLoading","useSelector","selectIsLoading","orders","selectOrders","useMemo","table","useReactTable","enableColumnResizing","columnResizeMode","getCoreRowModel","_Fragment","getHeaderGroups","map","headerGroup","index","headers","colSpan","isPlaceholder","flexRender","columnDef","getContext","getRowModel","rows","getVisibleCells","style","getSize","status","length","Loader","AllOrdersPage","useState","dispatch","useDispatch","selectCurrentPage","totalOrders","selectTotalOrders","useEffect","params","limit","fetchOrders","setCurrentPage","container","FilterForm","AllOrdersTable","RenderPaginationDots","newPage"],"sourceRoot":""}