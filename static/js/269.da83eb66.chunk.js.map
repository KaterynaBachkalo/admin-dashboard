{"version":3,"file":"static/js/269.da83eb66.chunk.js","mappings":"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","sources":["webpack://my-app/./src/pages/AllOrdersPage/AllOrdersPage.module.css?16b9","webpack://my-app/./src/components/AllOrders/FilterForm/FilterForm.module.css?d6b2","components/AllOrders/FilterForm/FilterForm.tsx","webpack://my-app/./src/components/AllOrders/AllOrders/AllOrdersTable.module.css?4195","components/AllOrders/AllOrders/AllOrdersTable.tsx","pages/AllOrdersPage/AllOrdersPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"AllOrdersPage_container__+Iqo4\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"FilterForm_wrap__DCbyH\",\"inputWrap\":\"FilterForm_inputWrap__6QzUp\",\"icon\":\"FilterForm_icon__JZ+ry\",\"input\":\"FilterForm_input__ms-a-\",\"errormessage\":\"FilterForm_errormessage__5vyec\",\"button\":\"FilterForm_button__L-dTP\"};","import css from \"./FilterForm.module.css\";\n\nimport { useForm } from \"react-hook-form\";\n\nimport Icon from \"../../Icon\";\n\ninterface IForms {\n  name: string;\n}\n\nconst FilterForm = () => {\n  const { register, handleSubmit } = useForm<IForms>();\n  const onSubmit = (data: IForms) => console.log(data);\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div className={css.wrap}>\n        <input\n          {...register(\"name\")}\n          className={css.input}\n          placeholder=\"User Name\"\n        />\n\n        <button type=\"submit\" className={css.button}>\n          <div className={css.icon}>\n            <Icon name=\"filter\" width={14} height={14} />\n          </div>\n          Filter\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default FilterForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"table\":\"AllOrdersTable_table__Iaj64\",\"header\":\"AllOrdersTable_header__722FH\",\"subheader\":\"AllOrdersTable_subheader__nmtI2\",\"row\":\"AllOrdersTable_row__6C1+U\",\"cellWrap\":\"AllOrdersTable_cellWrap__e5T70\",\"avatar\":\"AllOrdersTable_avatar__Y1+Fp\"};","import {\n  getCoreRowModel,\n  ColumnDef,\n  flexRender,\n  useReactTable,\n} from \"@tanstack/react-table\";\nimport css from \"./AllOrdersTable.module.css\";\n\ninterface Person {\n  name: string;\n  avatar: string;\n  address: string;\n  products: number;\n  date: string;\n  price: number;\n  status: string;\n}\n\nconst columns: ColumnDef<Person>[] = [\n  {\n    header: \"All orders\",\n    footer: (props) => props.column.id,\n    columns: [\n      {\n        accessorKey: \"info\",\n        header: \"User Info\",\n        cell: ({ row }) => (\n          <div className={css.cellWrap}>\n            <img\n              src={row.original.avatar}\n              alt={row.original.name}\n              className={css.avatar}\n            />\n            {row.original.name}\n          </div>\n        ),\n        footer: (props) => props.column.id,\n      },\n      {\n        accessorKey: \"address\",\n        header: \"Address\",\n        footer: (props) => props.column.id,\n      },\n      {\n        accessorKey: \"products\",\n        header: \"Products\",\n        footer: (props) => props.column.id,\n      },\n      {\n        accessorKey: \"date\",\n        header: \"Order date\",\n        footer: (props) => props.column.id,\n      },\n      {\n        accessorKey: \"price\",\n        header: \"Price\",\n        footer: (props) => props.column.id,\n      },\n      {\n        accessorKey: \"status\",\n        header: \"Status\",\n        footer: (props) => props.column.id,\n      },\n    ],\n  },\n];\n\nconst AllOrdersTable = () => {\n  const data = [\n    {\n      name: \"Alex Shatov\",\n      avatar: \"https://randomuser.me/api/portraits/men/1.jpg\",\n      address: \"Mripur-1\",\n      products: 12,\n      date: \"July 31, 2023\",\n      price: 890.66,\n      status: \"Completed\",\n    },\n    {\n      name: \"Alex Shatov\",\n      avatar: \"https://randomuser.me/api/portraits/men/1.jpg\",\n      address: \"Mripur-1\",\n      products: 12,\n      date: \"July 31, 2023\",\n      price: 890.66,\n      status: \"Completed\",\n    },\n    {\n      name: \"Alex Shatov\",\n      avatar: \"https://randomuser.me/api/portraits/men/1.jpg\",\n      address: \"Mripur-1\",\n      products: 12,\n      date: \"July 31, 2023\",\n      price: 890.66,\n      status: \"Completed\",\n    },\n    {\n      name: \"Alex Shatov\",\n      avatar: \"https://randomuser.me/api/portraits/men/1.jpg\",\n      address: \"Mripur-1\",\n      products: 12,\n      date: \"July 31, 2023\",\n      price: 890.66,\n      status: \"Completed\",\n    },\n    {\n      name: \"Alex Shatov\",\n      avatar: \"https://randomuser.me/api/portraits/men/1.jpg\",\n      address: \"Mripur-1\",\n      products: 12,\n      date: \"July 31, 2023\",\n      price: 890.66,\n      status: \"Completed\",\n    },\n  ];\n\n  const table = useReactTable({\n    data,\n    columns,\n    enableColumnResizing: true,\n    columnResizeMode: \"onChange\",\n    getCoreRowModel: getCoreRowModel(),\n    debugTable: true,\n    debugHeaders: true,\n    debugColumns: true,\n  });\n\n  return (\n    <table className={css.table}>\n      <thead>\n        {table.getHeaderGroups().map((headerGroup, index) => (\n          <tr\n            key={headerGroup.id}\n            className={index === 0 ? css.header : css.subheader}\n          >\n            {headerGroup.headers.map((header) => (\n              <th\n                key={header.id}\n                colSpan={header.colSpan}\n                className={index === 0 ? css.header : css.subheader}\n                style={{ width: header.getSize() }}\n              >\n                {header.isPlaceholder\n                  ? null\n                  : flexRender(\n                      header.column.columnDef.header,\n                      header.getContext()\n                    )}\n              </th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n      <tbody>\n        {table.getRowModel().rows.map((row) => {\n          return (\n            <tr key={row.id}>\n              {row.getVisibleCells().map((cell) => {\n                return (\n                  <td\n                    key={cell.id}\n                    className={css.row}\n                    style={{ width: cell.column.getSize() }}\n                  >\n                    {flexRender(cell.column.columnDef.cell, cell.getContext())}\n                  </td>\n                );\n              })}\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\nexport default AllOrdersTable;\n","import React from \"react\";\nimport css from \"./AllOrdersPage.module.css\";\nimport FilterForm from \"../../components/AllOrders/FilterForm/FilterForm\";\nimport AllOrdersTable from \"../../components/AllOrders/AllOrders/AllOrdersTable\";\n\nconst AllOrdersPage = () => {\n  return (\n    <section className={css.container}>\n      <FilterForm />\n      <AllOrdersTable />\n    </section>\n  );\n};\n\nexport default AllOrdersPage;\n"],"names":["FilterForm","register","handleSubmit","useForm","_jsx","onSubmit","data","console","log","children","_jsxs","className","css","placeholder","type","Icon","name","width","height","columns","header","footer","props","column","id","accessorKey","cell","_ref","row","src","original","avatar","alt","AllOrdersTable","table","useReactTable","address","products","date","price","status","enableColumnResizing","columnResizeMode","getCoreRowModel","debugTable","debugHeaders","debugColumns","getHeaderGroups","map","headerGroup","index","headers","colSpan","style","getSize","isPlaceholder","flexRender","columnDef","getContext","getRowModel","rows","getVisibleCells","AllOrdersPage"],"sourceRoot":""}