{"version":3,"file":"static/js/269.1b9bdbee.chunk.js","mappings":"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","sources":["webpack://my-app/./src/pages/AllOrdersPage/AllOrdersPage.module.css?16b9","webpack://my-app/./src/components/AllOrders/FilterForm/FilterForm.module.css?d6b2","components/AllOrders/FilterForm/FilterForm.tsx","webpack://my-app/./src/components/AllOrders/AllOrders/AllOrdersTable.module.css?4195","components/AllOrders/AllOrders/AllOrdersTable.tsx","pages/AllOrdersPage/AllOrdersPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"AllOrdersPage_container__+Iqo4\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"FilterForm_wrap__DCbyH\",\"inputWrap\":\"FilterForm_inputWrap__6QzUp\",\"icon\":\"FilterForm_icon__JZ+ry\",\"input\":\"FilterForm_input__ms-a-\",\"errormessage\":\"FilterForm_errormessage__5vyec\",\"button\":\"FilterForm_button__L-dTP\"};","import css from \"./FilterForm.module.css\";\n\nimport { useForm } from \"react-hook-form\";\n\nimport Icon from \"../../Icon\";\nimport { FC } from \"react\";\n\ninterface IForms {\n  name: string;\n}\n\ninterface IProps {\n  setSearchQuery: (value: string) => void;\n}\n\nconst FilterForm: FC<IProps> = ({ setSearchQuery }) => {\n  const { register, handleSubmit } = useForm<IForms>();\n  const onSubmit = (data: IForms) => {\n    setSearchQuery(data.name);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div className={css.wrap}>\n        <input\n          {...register(\"name\")}\n          className={css.input}\n          placeholder=\"User Name\"\n        />\n\n        <button type=\"submit\" className={css.button}>\n          <div className={css.icon}>\n            <Icon name=\"filter\" width={14} height={14} />\n          </div>\n          Filter\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default FilterForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"table\":\"AllOrdersTable_table__Iaj64\",\"header\":\"AllOrdersTable_header__722FH\",\"subheader\":\"AllOrdersTable_subheader__nmtI2\",\"row\":\"AllOrdersTable_row__6C1+U\",\"cellWrap\":\"AllOrdersTable_cellWrap__e5T70\",\"avatar\":\"AllOrdersTable_avatar__Y1+Fp\",\"noResults\":\"AllOrdersTable_noResults__4l4It\",\"col-name\":\"AllOrdersTable_col-name__FjTI3\",\"col-address\":\"AllOrdersTable_col-address__yD9Im\",\"col-products\":\"AllOrdersTable_col-products__x+HDH\"};","import {\n  getCoreRowModel,\n  ColumnDef,\n  flexRender,\n  useReactTable,\n} from \"@tanstack/react-table\";\nimport css from \"./AllOrdersTable.module.css\";\nimport { useEffect, useMemo, useState } from \"react\";\n\ninterface Person {\n  name: string;\n  avatar: string;\n  address: string;\n  products: number;\n  date: string;\n  price: number;\n  status: string;\n}\n\nconst columns: ColumnDef<Person>[] = [\n  {\n    header: \"All orders\",\n    footer: (props) => props.column.id,\n    columns: [\n      {\n        accessorKey: \"name\",\n        header: \"User Info\",\n        cell: ({ row }) => (\n          <div className={css.cellWrap}>\n            <img\n              src={row.original.avatar}\n              alt={row.original.name}\n              className={css.avatar}\n            />\n            {row.original.name}\n          </div>\n        ),\n        footer: (props) => props.column.id,\n      },\n      {\n        accessorKey: \"address\",\n        header: \"Address\",\n        footer: (props) => props.column.id,\n      },\n      {\n        accessorKey: \"products\",\n        header: \"Products\",\n        footer: (props) => props.column.id,\n      },\n      {\n        accessorKey: \"date\",\n        header: \"Order date\",\n        footer: (props) => props.column.id,\n      },\n      {\n        accessorKey: \"price\",\n        header: \"Price\",\n        footer: (props) => props.column.id,\n      },\n      {\n        accessorKey: \"status\",\n        header: \"Status\",\n        footer: (props) => props.column.id,\n      },\n    ],\n  },\n];\n\nconst AllOrdersTable = ({ searchQuery }: { searchQuery: string }) => {\n  const data = useMemo(\n    () => [\n      {\n        name: \"Alex Shatov\",\n        avatar: \"https://randomuser.me/api/portraits/men/1.jpg\",\n        address: \"Mripur-1\",\n        products: 12,\n        date: \"July 31, 2023\",\n        price: 890.66,\n        status: \"Completed\",\n      },\n      {\n        name: \"Philip Harbach\",\n        avatar: \"https://randomuser.me/api/portraits/men/1.jpg\",\n        address: \"Mripur-1\",\n        products: 12,\n        date: \"July 31, 2023\",\n        price: 890.66,\n        status: \"Completed\",\n      },\n      {\n        name: \"Mirko Fisuk\",\n        avatar: \"https://randomuser.me/api/portraits/men/1.jpg\",\n        address: \"Mripur-1\",\n        products: 12,\n        date: \"July 31, 2023\",\n        price: 890.66,\n        status: \"Completed\",\n      },\n      {\n        name: \"Olga Semklo\",\n        avatar: \"https://randomuser.me/api/portraits/men/1.jpg\",\n        address: \"Mripur-1\",\n        products: 12,\n        date: \"July 31, 2023\",\n        price: 890.66,\n        status: \"Completed\",\n      },\n      {\n        name: \"Burak Long\",\n        avatar: \"https://randomuser.me/api/portraits/men/1.jpg\",\n        address: \"Mripur-1\",\n        products: 12,\n        date: \"July 31, 2023\",\n        price: 890.66,\n        status: \"Completed\",\n      },\n    ],\n    []\n  );\n\n  const [filteredData, setFilteredData] = useState(data);\n\n  useEffect(() => {\n    const lowercasedQuery = searchQuery.toLowerCase();\n    setFilteredData(\n      data.filter((item) => item.name.toLowerCase().includes(lowercasedQuery))\n    );\n  }, [searchQuery, data]);\n\n  const table = useReactTable({\n    data: filteredData,\n    columns,\n    enableColumnResizing: true,\n    columnResizeMode: \"onChange\",\n    getCoreRowModel: getCoreRowModel(),\n    debugTable: true,\n    debugHeaders: true,\n    debugColumns: true,\n  });\n\n  return (\n    <>\n      <table className={css.table}>\n        <thead>\n          {table.getHeaderGroups().map((headerGroup, index) => (\n            <tr\n              key={headerGroup.id}\n              className={index === 0 ? css.header : css.subheader}\n            >\n              {headerGroup.headers.map((header) => (\n                <th\n                  key={header.id}\n                  colSpan={header.colSpan}\n                  className={index === 0 ? css.header : css.subheader}\n                  style={{ width: header.getSize() }}\n                >\n                  {header.isPlaceholder\n                    ? null\n                    : flexRender(\n                        header.column.columnDef.header,\n                        header.getContext()\n                      )}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody>\n          {table.getRowModel().rows.map((row) => {\n            return (\n              <tr key={row.id}>\n                {row.getVisibleCells().map((cell) => {\n                  return (\n                    <td\n                      key={cell.id}\n                      className={`${css.row} ${\n                        cell.column.id === \"name\"\n                          ? css[\"col-name\"]\n                          : cell.column.id === \"address\"\n                          ? css[\"col-address\"]\n                          : cell.column.id === \"products\"\n                          ? css[\"col-products\"]\n                          : \"\"\n                      }`}\n                      style={{ width: cell.column.getSize() }}\n                    >\n                      {flexRender(\n                        cell.column.columnDef.cell,\n                        cell.getContext()\n                      )}\n                    </td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      {filteredData.length === 0 && (\n        <div className={css.noResults}>\n          No results found for your search query.\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default AllOrdersTable;\n","import React, { useState } from \"react\";\nimport css from \"./AllOrdersPage.module.css\";\nimport FilterForm from \"../../components/AllOrders/FilterForm/FilterForm\";\nimport AllOrdersTable from \"../../components/AllOrders/AllOrders/AllOrdersTable\";\n\nconst AllOrdersPage = () => {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  return (\n    <section className={css.container}>\n      <FilterForm setSearchQuery={setSearchQuery} />\n      <AllOrdersTable searchQuery={searchQuery} />\n    </section>\n  );\n};\n\nexport default AllOrdersPage;\n"],"names":["_ref","setSearchQuery","register","handleSubmit","useForm","_jsx","onSubmit","data","name","children","_jsxs","className","css","placeholder","type","Icon","width","height","columns","header","footer","props","column","id","accessorKey","cell","row","src","original","avatar","alt","_ref2","searchQuery","useMemo","address","products","date","price","status","filteredData","setFilteredData","useState","useEffect","lowercasedQuery","toLowerCase","filter","item","includes","table","useReactTable","enableColumnResizing","columnResizeMode","getCoreRowModel","debugTable","debugHeaders","debugColumns","_Fragment","getHeaderGroups","map","headerGroup","index","headers","colSpan","style","getSize","isPlaceholder","flexRender","columnDef","getContext","getRowModel","rows","getVisibleCells","concat","length","AllOrdersPage","FilterForm","AllOrdersTable"],"sourceRoot":""}