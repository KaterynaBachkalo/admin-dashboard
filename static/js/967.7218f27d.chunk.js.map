{"version":3,"file":"static/js/967.7218f27d.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/FilterForm/FilterForm.module.css?6686","components/FilterForm/FilterForm.tsx","webpack://my-app/./src/components/Modal/Modal.module.css?28d7","services/closeModals.ts","components/Modal/Modal.tsx","webpack://my-app/./src/components/Pagination/RenderPaginationDots.module.css?6d41","components/Pagination/RenderPaginationDots.tsx","webpack://my-app/./src/components/AllProducts/AddNewProduct/AddNewProduct.module.css?c447","webpack://my-app/./src/components/AllProducts/AddNewProductModal/AddNewProductModal.module.css?2162","webpack://my-app/./src/components/Dropdown/Dropdown.module.css?9e0d","data/categories.ts","components/Dropdown/Dropdown.tsx","components/AllProducts/AddNewProductModal/AddNewProductModal.tsx","components/AllProducts/AddNewProduct/AddNewProduct.tsx","webpack://my-app/./src/components/AllProducts/AllProductsTable/AllProductsTable.module.css?362c","webpack://my-app/./src/components/EditModalProduct/EditModal.module.css?01f3","components/EditModalProduct/EditModal.tsx","webpack://my-app/./src/components/DeleteModal copy/DeleteModal.module.css?2d2d","components/DeleteModal copy/DeleteModal.tsx","components/AllProducts/AllProductsTable/AllProductsTable.tsx","pages/AllProductsPage.tsx","redux/admin/selectors.ts","services/closeDropdown.ts","webpack://my-app/./src/pages/ContainerStyles.module.css?0f70"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"FilterForm_wrap__dKOTC\",\"inputWrap\":\"FilterForm_inputWrap__7OFkS\",\"icon\":\"FilterForm_icon__23iPD\",\"input\":\"FilterForm_input__NJviq\",\"errormessage\":\"FilterForm_errormessage__ntEtl\",\"button\":\"FilterForm_button__2yayb\"};","import css from \"./FilterForm.module.css\";\n\nimport { useForm } from \"react-hook-form\";\n\nimport Icon from \"../Icon\";\nimport { FC } from \"react\";\n\ninterface IForms {\n  name: string;\n}\n\ninterface IProps {\n  setSearchQuery: (value: string) => void;\n  placeholder: string;\n}\n\nconst FilterForm: FC<IProps> = ({ setSearchQuery, placeholder }) => {\n  const { register, handleSubmit } = useForm<IForms>();\n  const onSubmit = (data: IForms) => {\n    setSearchQuery(data.name);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div className={css.wrap}>\n        <input\n          {...register(\"name\")}\n          className={css.input}\n          placeholder={placeholder}\n        />\n\n        <button type=\"submit\" className={css.button}>\n          <div className={css.icon}>\n            <Icon name=\"filter\" width={14} height={14} />\n          </div>\n          Filter\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default FilterForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"backdrop\":\"Modal_backdrop__xTnIT\",\"container\":\"Modal_container__Ha+Ky\",\"modal\":\"Modal_modal__DJDMv\",\"btnClose\":\"Modal_btnClose__oHdcJ\",\"title\":\"Modal_title__3HkNf\"};","import { useEffect, RefObject } from \"react\";\n\ntype CloseFunction = (value: boolean) => void;\n\nconst useCloseModals = (\n  func: CloseFunction,\n  myRef: RefObject<HTMLElement>,\n  ref?: RefObject<HTMLElement>\n) => {\n  useEffect(() => {\n    const handleKeyDown = (event: globalThis.KeyboardEvent) => {\n      if (event.code === \"Escape\") {\n        func(false);\n      }\n    };\n\n    const handleClose = (event: MouseEvent) => {\n      if (myRef.current && !myRef.current.contains(event.target as Node)) {\n        func(false);\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n    document.addEventListener(\"mousedown\", handleClose);\n    document.body.classList.add(\"body-scroll-lock\");\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n      document.removeEventListener(\"mousedown\", handleClose);\n      document.body.classList.remove(\"body-scroll-lock\");\n    };\n  }, [func, myRef, ref]);\n};\n\nexport default useCloseModals;\n","import { FC, ReactNode, useRef } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport css from \"./Modal.module.css\";\nimport useCloseModals from \"../../services/closeModals\";\nimport Icon from \"../Icon\";\n\nconst modalRoot: Element | null = document.querySelector(\"#root-modal\");\n\ninterface IProps {\n  onClose: (value: boolean) => void;\n  children: ReactNode;\n  title: string;\n}\n\nconst Modal: FC<IProps> = ({ onClose, children, title }) => {\n  const modalRef = useRef<HTMLDivElement | null>(null);\n  useCloseModals(onClose, modalRef);\n\n  return (\n    modalRoot &&\n    createPortal(\n      <div className={css.backdrop}>\n        <div className={css.container}>\n          <div\n            className={css.modal}\n            ref={modalRef}\n            onClick={(event) => event.stopPropagation()}\n          >\n            <button className={css.btnClose} onClick={() => onClose(false)}>\n              <Icon name=\"close\" width={24} height={24} />\n            </button>\n            <div className={css.title}>{title}</div>\n            <div>{children}</div>\n          </div>\n        </div>\n      </div>,\n\n      modalRoot\n    )\n  );\n};\n\nexport default Modal;\n","// extracted by mini-css-extract-plugin\nexport default {\"pagination\":\"RenderPaginationDots_pagination__HG7kX\",\"dot\":\"RenderPaginationDots_dot__MjI2h\",\"activeDot\":\"RenderPaginationDots_activeDot__xOgyA\"};","import { FC } from \"react\";\nimport css from \"./RenderPaginationDots.module.css\";\n\ninterface IProps {\n  currentPage: number;\n  total: number;\n  handlePageChange: (value: number) => void;\n}\n\nconst RenderPaginationDots: FC<IProps> = ({\n  currentPage,\n  total,\n  handlePageChange,\n}) => {\n  const totalPages = Math.ceil(total / 5);\n\n  const dots = [];\n  const maxDots = 5;\n  const middleRange = Math.floor(maxDots / 2);\n\n  let start = Math.max(1, currentPage - middleRange);\n  let end = Math.min(totalPages, currentPage + middleRange);\n\n  if (currentPage <= middleRange) {\n    end = Math.min(totalPages, maxDots);\n  } else if (currentPage > totalPages - middleRange) {\n    start = Math.max(1, totalPages - maxDots + 1);\n  }\n\n  for (let page = start; page <= end; page++) {\n    dots.push(\n      <button\n        key={page}\n        onClick={() => handlePageChange(page)}\n        className={`${css.dot} ${currentPage === page ? css.activeDot : \"\"}`}\n      />\n    );\n  }\n\n  if (start > 1) {\n    dots.unshift(<span key=\"startEllipsis\">...</span>);\n    dots.unshift(\n      <button\n        key={1}\n        onClick={() => handlePageChange(1)}\n        className={`${css.dot} ${currentPage === 1 ? css.activeDot : \"\"}`}\n      />\n    );\n  }\n\n  if (end < totalPages) {\n    dots.push(<span key=\"endEllipsis\">...</span>);\n    dots.push(\n      <button\n        key={totalPages}\n        onClick={() => handlePageChange(totalPages)}\n        className={`${css.dot} ${\n          currentPage === totalPages ? css.activeDot : \"\"\n        }`}\n      />\n    );\n  }\n\n  return <div className={css.pagination}>{dots}</div>;\n};\n\nexport default RenderPaginationDots;\n","// extracted by mini-css-extract-plugin\nexport default {\"icon\":\"AddNewProduct_icon__MFMLA\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"AddNewProductModal_wrap__U+mpS\",\"inputWrap\":\"AddNewProductModal_inputWrap__jAL8w\",\"input\":\"AddNewProductModal_input__SF6J9\",\"errormessage\":\"AddNewProductModal_errormessage__sDoOW\",\"iconChevron\":\"AddNewProductModal_iconChevron__edSiP\",\"buttonWrap\":\"AddNewProductModal_buttonWrap__cJclg\",\"buttonAdd\":\"AddNewProductModal_buttonAdd__wSxIX\",\"buttonCancel\":\"AddNewProductModal_buttonCancel__5dJ84\",\"button\":\"AddNewProductModal_button__MYsxS\"};","// extracted by mini-css-extract-plugin\nexport default {\"dropDown\":\"Dropdown_dropDown__VO0hG\",\"container\":\"Dropdown_container__wdJNh\",\"title\":\"Dropdown_title__Gb0r3\",\"list\":\"Dropdown_list__T+o5-\",\"category\":\"Dropdown_category__mKHwx\"};","export const categories = [\n  \"Medicine\",\n  \"Head\",\n  \"Hand\",\n  \"Dental Care\",\n  \"Skin Care\",\n  \"Eye Care\",\n  \"Vitamins & Supplements\",\n  \"Orthopedic Products\",\n  \"Baby Care\",\n];\n","import React, { FC, LegacyRef, RefObject, useRef } from \"react\";\nimport css from \"./Dropdown.module.css\";\nimport useCloseDropdown from \"../../services/closeDropdown\";\nimport { categories } from \"../../data/categories\";\n\ninterface IProps {\n  onSelect: (value: string) => void;\n  onClose: (value: boolean) => void;\n  ref: LegacyRef<HTMLDivElement>;\n}\n\nconst Dropdown: FC<IProps> = React.forwardRef(({ onSelect, onClose }, ref) => {\n  const handleClick = (selectedCategory: string) => {\n    onSelect(selectedCategory);\n  };\n\n  const inputRef = useRef(null);\n\n  useCloseDropdown(onClose, inputRef, ref as RefObject<HTMLDivElement>);\n\n  return (\n    <div className={css.dropDown} ref={inputRef}>\n      <div className={css.container}>\n        <ul className={css.list}>\n          {categories.map((category) => (\n            <li\n              key={category}\n              onClick={() => handleClick(category)}\n              className={css.category}\n            >\n              {category}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n});\n\nexport default Dropdown;\n","import { FC, useEffect, useRef, useState } from \"react\";\nimport css from \"./AddNewProductModal.module.css\";\nimport Icon from \"../../Icon\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Dropdown from \"../../Dropdown/Dropdown\";\n\ninterface AddModalProps {\n  onClose: () => void;\n}\n\ninterface IForms {\n  productInfo: string;\n  category: string;\n  suppliers: string;\n  stock: string;\n  price: number;\n}\n\nconst AddNewProductModal: FC<AddModalProps> = ({ onClose }) => {\n  const [isOpenDropdown, setOpenDropdown] = useState(false);\n  const [selectedFilter, setSelectedFilter] = useState(\"\");\n\n  const iconref = useRef<HTMLDivElement | null>(null);\n\n  const schema = yup\n    .object({\n      productInfo: yup.string().required(\"Product info is required\"),\n      category: yup.string().required(\"Category is required\"),\n      suppliers: yup.string().required(\"Suppliers is required\"),\n      stock: yup.string().required(\"Stock is required\"),\n      price: yup\n        .number()\n        .typeError(\"Price is required and must be a number\")\n        .required(),\n    })\n    .required();\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    control,\n    setValue,\n    formState: { errors },\n  } = useForm<IForms>({\n    resolver: yupResolver(schema),\n  });\n\n  const onSubmit = (data: IForms) => {\n    console.log(data);\n    reset();\n  };\n\n  const handleSelect = (selected: string) => {\n    setSelectedFilter(selected);\n    setOpenDropdown(false);\n  };\n\n  useEffect(() => {\n    setValue(\"category\", selectedFilter);\n  }, [selectedFilter, setValue]);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className={css.wrap}>\n          <div>\n            <input\n              {...register(\"productInfo\")}\n              className={css.input}\n              placeholder=\"Product info\"\n            />\n            <p className={css.errormessage}>{errors.productInfo?.message}</p>\n          </div>\n\n          <div className={css.inputWrap}>\n            <Controller\n              name=\"category\"\n              control={control}\n              render={({ field }) => (\n                <input\n                  {...field}\n                  className={css.input}\n                  placeholder=\"Category\"\n                  value={selectedFilter}\n                />\n              )}\n            />\n            <p className={css.errormessage}>{errors.category?.message}</p>\n\n            <div\n              className={css.iconChevron}\n              onClick={() => setOpenDropdown(!isOpenDropdown)}\n              ref={iconref}\n            >\n              <Icon name=\"chevron-down\" width={16} height={16} />\n            </div>\n            {isOpenDropdown && (\n              <Dropdown\n                onSelect={handleSelect}\n                onClose={setOpenDropdown}\n                ref={iconref}\n              />\n            )}\n          </div>\n\n          <div>\n            <input\n              {...register(\"suppliers\")}\n              className={css.input}\n              placeholder=\"Suppliers\"\n            />\n            <p className={css.errormessage}>{errors.suppliers?.message}</p>\n          </div>\n\n          <div>\n            <input\n              {...register(\"stock\")}\n              className={css.input}\n              placeholder=\"Stock\"\n            />\n            <p className={css.errormessage}>{errors.stock?.message}</p>\n          </div>\n\n          <div>\n            <input\n              {...register(\"price\")}\n              className={css.input}\n              placeholder=\"Price\"\n              type=\"number\"\n            />\n            <p className={css.errormessage}>{errors.price?.message}</p>\n          </div>\n        </div>\n\n        <div className={css.buttonWrap}>\n          <button type=\"submit\" className={css.buttonAdd}>\n            Add\n          </button>\n\n          <button type=\"button\" className={css.buttonCancel} onClick={onClose}>\n            Cancel\n          </button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default AddNewProductModal;\n","import css from \"./AddNewProduct.module.css\";\nimport Icon from \"../../Icon\";\nimport { useState } from \"react\";\nimport Modal from \"../../Modal/Modal\";\nimport AddNewProductModal from \"../AddNewProductModal/AddNewProductModal\";\n\nconst AddNewProduct = () => {\n  const [isOpenModal, setOpenModal] = useState(false);\n\n  const closeAddModal = () => {\n    setOpenModal(false);\n  };\n\n  return (\n    <>\n      <div className={css.icon} onClick={() => setOpenModal(true)}>\n        <Icon name=\"add\" width={20} height={20} />\n      </div>\n\n      {isOpenModal && (\n        <Modal onClose={closeAddModal} title=\"Add a new product\">\n          <AddNewProductModal onClose={closeAddModal} />\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default AddNewProduct;\n","// extracted by mini-css-extract-plugin\nexport default {\"table\":\"AllProductsTable_table__RucKg\",\"header\":\"AllProductsTable_header__L8aca\",\"subheader\":\"AllProductsTable_subheader__AUKOw\",\"row\":\"AllProductsTable_row__-xfsz\",\"cellWrap\":\"AllProductsTable_cellWrap__PhHoL\",\"avatar\":\"AllProductsTable_avatar__KixhJ\",\"noResults\":\"AllProductsTable_noResults__dcB5-\",\"col-info\":\"AllProductsTable_col-info__KTKqG\",\"col-category\":\"AllProductsTable_col-category__K37vU\",\"col-stock\":\"AllProductsTable_col-stock__7Jp11\",\"buttonsWrap\":\"AllProductsTable_buttonsWrap__S3MdH\",\"buttonEdit\":\"AllProductsTable_buttonEdit__yCkyO\",\"buttonDelete\":\"AllProductsTable_buttonDelete__hTPUZ\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"EditModal_wrap__6LjQN\",\"inputWrap\":\"EditModal_inputWrap__8rLVE\",\"input\":\"EditModal_input__DemmQ\",\"errormessage\":\"EditModal_errormessage__Twc9m\",\"iconChevron\":\"EditModal_iconChevron__Y44qd\",\"buttonWrap\":\"EditModal_buttonWrap__wH5ct\",\"buttonAdd\":\"EditModal_buttonAdd__MgbNJ\",\"buttonCancel\":\"EditModal_buttonCancel__nZEvv\",\"button\":\"EditModal_button__T3lwL\"};","import { FC, useEffect, useRef, useState } from \"react\";\nimport css from \"./EditModal.module.css\";\nimport { Products } from \"../AllProducts/AllProductsTable/AllProductsTable\";\nimport { Controller, useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport Icon from \"../Icon\";\nimport Dropdown from \"../Dropdown/Dropdown\";\n\ninterface EditModalProps {\n  data: Products;\n  onClose: () => void;\n}\n\ninterface IForms {\n  name: string;\n  category: string;\n  suppliers: string;\n  stock: string;\n  price: string;\n}\n\nconst EditModal: FC<EditModalProps> = ({ data, onClose }) => {\n  const [isOpenDropdown, setOpenDropdown] = useState(false);\n  const [selectedFilter, setSelectedFilter] = useState(data.category);\n\n  const iconref = useRef<HTMLDivElement | null>(null);\n\n  const schema = yup\n    .object({\n      name: yup.string().required(\"Product info is required\"),\n      category: yup.string().required(\"Category is required\"),\n      suppliers: yup.string().required(\"Suppliers is required\"),\n      stock: yup.string().required(\"Stock is required\"),\n      price: yup\n        .string()\n        .typeError(\"Price is required and must be a number\")\n        .required(),\n    })\n    .required();\n\n  const {\n    register,\n    handleSubmit,\n    control,\n    setValue,\n    formState: { errors },\n  } = useForm<IForms>({\n    resolver: yupResolver(schema),\n    defaultValues: {\n      name: data.name,\n      category: data.category,\n      suppliers: data.suppliers,\n      stock: data.stock,\n      price: data.price,\n    },\n  });\n\n  const onSubmit = (data: IForms) => {\n    console.log(data);\n\n    onClose();\n  };\n\n  const handleSelect = (selected: string) => {\n    setSelectedFilter(selected);\n    setOpenDropdown(false);\n  };\n\n  useEffect(() => {\n    setValue(\"category\", selectedFilter);\n  }, [selectedFilter, setValue]);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className={css.wrap}>\n          <div>\n            <input\n              {...register(\"name\")}\n              className={css.input}\n              placeholder=\"Product info\"\n            />\n            <p className={css.errormessage}>{errors.name?.message}</p>\n          </div>\n\n          <div className={css.inputWrap}>\n            <Controller\n              name=\"category\"\n              control={control}\n              render={({ field }) => (\n                <input\n                  {...field}\n                  className={css.input}\n                  placeholder=\"Category\"\n                  value={selectedFilter}\n                  onChange={(e) => setSelectedFilter(e.target.value)}\n                />\n              )}\n            />\n            <p className={css.errormessage}>{errors.category?.message}</p>\n\n            <div\n              className={css.iconChevron}\n              onClick={() => setOpenDropdown(!isOpenDropdown)}\n              ref={iconref}\n            >\n              <Icon name=\"chevron-down\" width={16} height={16} />\n            </div>\n            {isOpenDropdown && (\n              <Dropdown\n                onSelect={handleSelect}\n                onClose={setOpenDropdown}\n                ref={iconref}\n              />\n            )}\n          </div>\n\n          <div>\n            <input\n              {...register(\"suppliers\")}\n              className={css.input}\n              placeholder=\"Suppliers\"\n            />\n            <p className={css.errormessage}>{errors.suppliers?.message}</p>\n          </div>\n\n          <div>\n            <input\n              {...register(\"stock\")}\n              className={css.input}\n              placeholder=\"Stock\"\n            />\n            <p className={css.errormessage}>{errors.stock?.message}</p>\n          </div>\n\n          <div>\n            <Controller\n              name=\"price\"\n              control={control}\n              render={({ field }) => (\n                <input\n                  {...field}\n                  className={css.input}\n                  placeholder=\"Price\"\n                  onChange={(e) => {\n                    const value = e.target.value.replace(\",\", \".\");\n                    field.onChange(value);\n                  }}\n                />\n              )}\n            />\n            <p className={css.errormessage}>{errors.price?.message}</p>\n          </div>\n        </div>\n\n        <div className={css.buttonWrap}>\n          <button type=\"submit\" className={css.buttonAdd}>\n            Add\n          </button>\n\n          <button type=\"button\" className={css.buttonCancel} onClick={onClose}>\n            Cancel\n          </button>\n        </div>\n      </form>\n    </>\n  );\n};\n\nexport default EditModal;\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"DeleteModal_text__nLnZI\",\"buttonWrap\":\"DeleteModal_buttonWrap__m5M8N\",\"buttonDelete\":\"DeleteModal_buttonDelete__y+Mnb\",\"buttonCancel\":\"DeleteModal_buttonCancel__ycUPy\"};","import { FC } from \"react\";\nimport css from \"./DeleteModal.module.css\";\nimport { Products } from \"../AllProducts/AllProductsTable/AllProductsTable\";\n\ninterface DeleteModalProps {\n  data: Products;\n  onClose: () => void;\n}\n\nconst DeleteModal: FC<DeleteModalProps> = ({ data, onClose }) => {\n  const handleDelete = () => {\n    onClose();\n  };\n\n  return (\n    <>\n      <p className={css.text}>Are you sure you want to delete {data.name}?</p>\n      <div className={css.buttonWrap}>\n        <button\n          type=\"submit\"\n          className={css.buttonDelete}\n          onClick={handleDelete}\n        >\n          Delete\n        </button>\n\n        <button type=\"button\" className={css.buttonCancel} onClick={onClose}>\n          Cancel\n        </button>\n      </div>\n    </>\n  );\n};\n\nexport default DeleteModal;\n","import {\n  getCoreRowModel,\n  ColumnDef,\n  flexRender,\n  useReactTable,\n} from \"@tanstack/react-table\";\nimport css from \"./AllProductsTable.module.css\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport Icon from \"../../Icon\";\nimport Modal from \"../../Modal/Modal\";\nimport EditModal from \"../../EditModalProduct/EditModal\";\nimport DeleteModal from \"../../DeleteModal copy/DeleteModal\";\nimport RenderPaginationDots from \"../../Pagination/RenderPaginationDots\";\nimport { useSelector } from \"react-redux\";\nimport {\n  selectCurrentPage,\n  selectProducts,\n  selectTotalProducts,\n} from \"../../../redux/admin/selectors\";\nimport { useDispatch } from \"react-redux\";\nimport { AppDispatch } from \"../../../redux/store\";\nimport { setCurrentPage } from \"../../../redux/admin/adminSlice\";\n\nexport interface Products {\n  name: string;\n  category: string;\n  stock: string;\n  suppliers: string;\n  price: string;\n}\n\nconst AllProductsTable = ({ searchQuery }: { searchQuery: string }) => {\n  const dispatch = useDispatch() as AppDispatch;\n\n  const products = useSelector(selectProducts);\n\n  const currentPage = useSelector(selectCurrentPage);\n  const totalProducts = useSelector(selectTotalProducts);\n\n  const handlePageChange = (newPage: number) => {\n    dispatch(setCurrentPage(newPage));\n  };\n\n  const columns: ColumnDef<Products>[] = [\n    {\n      header: \"All products\",\n      footer: (props) => props.column.id,\n      columns: [\n        {\n          accessorKey: \"name\",\n          header: \"Product Info\",\n          footer: (props) => props.column.id,\n        },\n        {\n          accessorKey: \"category\",\n          header: \"Category\",\n          footer: (props) => props.column.id,\n        },\n        {\n          accessorKey: \"stock\",\n          header: \"Stock\",\n          footer: (props) => props.column.id,\n        },\n        {\n          accessorKey: \"suppliers\",\n          header: \"Suppliers\",\n          footer: (props) => props.column.id,\n        },\n        {\n          accessorKey: \"price\",\n          header: \"Price\",\n          footer: (props) => props.column.id,\n        },\n        {\n          accessorKey: \"action\",\n          header: \"Action\",\n          cell: ({ row }) => (\n            <div className={css.buttonsWrap}>\n              <div\n                className={css.buttonEdit}\n                onClick={() => openEditModal(row.original)}\n              >\n                <Icon name=\"edit\" width={13} height={13} />\n              </div>\n              <div\n                className={css.buttonDelete}\n                onClick={() => openDeleteModal(row.original)}\n              >\n                <Icon name=\"delete\" width={13} height={13} />\n              </div>\n            </div>\n          ),\n          footer: (props) => props.column.id,\n        },\n      ],\n    },\n  ];\n\n  const data = useMemo(() => products, [products]);\n\n  const [filteredData, setFilteredData] = useState(data);\n  const [editModalData, setEditModalData] = useState<Products | null>(null);\n  const [deleteModalData, setDeleteModalData] = useState<Products | null>(null);\n\n  const openEditModal = (rowData: Products) => {\n    setEditModalData(rowData);\n  };\n\n  const openDeleteModal = (rowData: Products) => {\n    setDeleteModalData(rowData);\n  };\n\n  const closeEditModal = () => {\n    setEditModalData(null);\n  };\n\n  const closeDeleteModal = () => {\n    setDeleteModalData(null);\n  };\n\n  useEffect(() => {\n    const lowercasedQuery = searchQuery.toLowerCase();\n    setFilteredData(\n      data.filter((item) => item.name.toLowerCase().includes(lowercasedQuery))\n    );\n  }, [searchQuery, data]);\n\n  const table = useReactTable({\n    data: filteredData,\n    columns,\n    enableColumnResizing: true,\n    columnResizeMode: \"onChange\",\n    getCoreRowModel: getCoreRowModel(),\n    debugTable: false,\n    debugHeaders: false,\n    debugColumns: false,\n  });\n\n  return (\n    <>\n      <table className={css.table}>\n        <thead>\n          {table.getHeaderGroups().map((headerGroup, index) => (\n            <tr\n              key={headerGroup.id}\n              className={index === 0 ? css.header : css.subheader}\n            >\n              {headerGroup.headers.map((header) => (\n                <th\n                  key={header.id}\n                  colSpan={header.colSpan}\n                  className={index === 0 ? css.header : css.subheader}\n                  style={{ width: header.getSize() }}\n                >\n                  {header.isPlaceholder\n                    ? null\n                    : flexRender(\n                        header.column.columnDef.header,\n                        header.getContext()\n                      )}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody>\n          {table.getRowModel().rows.map((row) => {\n            return (\n              <tr key={row.id}>\n                {row.getVisibleCells().map((cell) => {\n                  return (\n                    <td\n                      key={cell.id}\n                      className={`${css.row} ${\n                        cell.column.id === \"name\"\n                          ? css[\"col-info\"]\n                          : cell.column.id === \"category\"\n                          ? css[\"col-category\"]\n                          : cell.column.id === \"stock\"\n                          ? css[\"col-stock\"]\n                          : \"\"\n                      }`}\n                      style={{ width: cell.column.getSize() }}\n                    >\n                      {flexRender(\n                        cell.column.columnDef.cell,\n                        cell.getContext()\n                      )}\n                    </td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n\n      {filteredData.length === 0 && (\n        <div className={css.noResults}>\n          No results found for your search query.\n        </div>\n      )}\n\n      {editModalData && (\n        <Modal onClose={closeEditModal} title=\"Edit product\">\n          <EditModal onClose={closeEditModal} data={editModalData} />\n        </Modal>\n      )}\n      {deleteModalData && (\n        <Modal onClose={closeDeleteModal} title=\"Delete Product\">\n          <DeleteModal onClose={closeDeleteModal} data={deleteModalData} />\n        </Modal>\n      )}\n\n      <RenderPaginationDots\n        currentPage={currentPage}\n        total={totalProducts}\n        handlePageChange={handlePageChange}\n      />\n    </>\n  );\n};\n\nexport default AllProductsTable;\n","import { useEffect, useState } from \"react\";\nimport FilterForm from \"../components/FilterForm/FilterForm\";\nimport css from \"./ContainerStyles.module.css\";\nimport AddNewProduct from \"../components/AllProducts/AddNewProduct/AddNewProduct\";\nimport AllProductsTable from \"../components/AllProducts/AllProductsTable/AllProductsTable\";\nimport { useDispatch } from \"react-redux\";\nimport { AppDispatch } from \"../redux/store\";\nimport { useSelector } from \"react-redux\";\nimport { selectCurrentPage } from \"../redux/admin/selectors\";\nimport { fetchProducts } from \"../redux/admin/operation\";\n\nconst AllProductsPage = () => {\n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\n  const dispatch = useDispatch() as AppDispatch;\n  const currentPage = useSelector(selectCurrentPage);\n\n  useEffect(() => {\n    const params: { page: number; limit: number; name?: string } = {\n      page: currentPage,\n      limit: 5,\n      ...(searchQuery && { name: searchQuery }),\n    };\n\n    dispatch(fetchProducts(params));\n  }, [currentPage, dispatch, searchQuery]);\n\n  return (\n    <section className={css.container}>\n      <FilterForm setSearchQuery={setSearchQuery} placeholder=\"Product Name\" />\n      <AddNewProduct />\n      <AllProductsTable searchQuery={searchQuery} />\n    </section>\n  );\n};\n\nexport default AllProductsPage;\n","import { IState } from \"./adminSlice\";\nimport { IFilter } from \"../filterSlice\";\n\nexport const selectProducts = (state: { admin: IState }) =>\n  state.admin.products;\n\nexport const selectSuppliers = (state: { admin: IState }) =>\n  state.admin.suppliers;\n\nexport const selectCustomers = (state: { admin: IState }) =>\n  state.admin.customers;\n\nexport const selectIncomeExpenses = (state: { admin: IState }) =>\n  state.admin.incomeExpenses;\n\nexport const selectOrders = (state: { admin: IState }) => state.admin.orders;\n\nexport const selectIsLoading = (state: { admin: IState }) =>\n  state.admin.isLoading;\n\nexport const selectError = (state: { admin: IState }) => state.admin.error;\n\nexport const selectFilter = (state: IFilter) => state.filter;\n\nexport const selectCurrentPage = (state: { admin: IState }) =>\n  state.admin.currentPage;\n\nexport const selectTotalCustomers = (state: { admin: IState }) =>\n  state.admin.totalCustomers;\n\nexport const selectTotalProducts = (state: { admin: IState }) =>\n  state.admin.totalProducts;\n\nexport const selectTotalSuppliers = (state: { admin: IState }) =>\n  state.admin.totalSuppliers;\n\nexport const selectTotalOrders = (state: { admin: IState }) =>\n  state.admin.totalOrders;\n","import { useEffect, RefObject } from \"react\";\n\ntype CloseFunction = (value: boolean) => void;\n\nconst useCloseDropdown = (\n  func: CloseFunction,\n  myRef: RefObject<HTMLElement>,\n  ref?: RefObject<HTMLElement>\n) => {\n  useEffect(() => {\n    const handleKeyDown = (event: globalThis.KeyboardEvent) => {\n      if (event.code === \"Escape\") {\n        func(false);\n      }\n    };\n\n    const handleClose = (event: MouseEvent) => {\n      if (\n        myRef.current &&\n        !myRef.current.contains(event.target as Node) &&\n        ref?.current &&\n        !ref?.current.contains(event.target as Node)\n      ) {\n        func(false);\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n    document.addEventListener(\"mousedown\", handleClose);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n      document.removeEventListener(\"mousedown\", handleClose);\n    };\n  }, [func, myRef, ref]);\n};\n\nexport default useCloseDropdown;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContainerStyles_container__c-Ay4\",\"wrap\":\"ContainerStyles_wrap__Zujzm\"};"],"names":["_ref","setSearchQuery","placeholder","register","handleSubmit","useForm","_jsx","onSubmit","data","name","children","_jsxs","className","css","type","Icon","width","height","useCloseModals","func","myRef","ref","useEffect","handleKeyDown","event","code","handleClose","current","contains","target","window","addEventListener","document","body","classList","add","removeEventListener","remove","modalRoot","querySelector","onClose","title","modalRef","useRef","createPortal","onClick","stopPropagation","currentPage","total","handlePageChange","totalPages","Math","ceil","dots","middleRange","floor","maxDots","start","max","end","min","page","push","concat","unshift","categories","React","onSelect","inputRef","useCloseDropdown","map","category","_errors$productInfo","_errors$category","_errors$suppliers","_errors$stock","_errors$price","isOpenDropdown","setOpenDropdown","useState","selectedFilter","setSelectedFilter","iconref","schema","yup","productInfo","required","suppliers","stock","price","typeError","reset","control","setValue","formState","errors","resolver","yupResolver","_Fragment","console","log","message","Controller","render","_ref2","field","value","Dropdown","selected","AddNewProduct","isOpenModal","setOpenModal","closeAddModal","Modal","AddNewProductModal","_errors$name","defaultValues","onChange","e","_ref3","replace","handleDelete","searchQuery","dispatch","useDispatch","products","useSelector","selectProducts","selectCurrentPage","totalProducts","selectTotalProducts","columns","header","footer","props","column","id","accessorKey","cell","row","openEditModal","original","openDeleteModal","useMemo","filteredData","setFilteredData","editModalData","setEditModalData","deleteModalData","setDeleteModalData","rowData","closeEditModal","closeDeleteModal","lowercasedQuery","toLowerCase","filter","item","includes","table","useReactTable","enableColumnResizing","columnResizeMode","getCoreRowModel","debugTable","debugHeaders","debugColumns","getHeaderGroups","headerGroup","index","headers","colSpan","style","getSize","isPlaceholder","flexRender","columnDef","getContext","getRowModel","rows","getVisibleCells","length","EditModal","DeleteModal","RenderPaginationDots","newPage","setCurrentPage","AllProductsPage","params","limit","fetchProducts","container","FilterForm","AllProductsTable","state","admin","selectSuppliers","selectCustomers","customers","selectIncomeExpenses","incomeExpenses","selectOrders","orders","selectTotalCustomers","totalCustomers","selectTotalSuppliers","totalSuppliers","selectTotalOrders","totalOrders"],"sourceRoot":""}