{"version":3,"file":"static/js/741.fe204e08.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/FilterForm/FilterForm.module.css?6686","components/FilterForm/FilterForm.tsx","webpack://my-app/./src/pages/CustomersDataPage/CustomersDataPage.module.css?0c04","webpack://my-app/./src/components/AllCustomers/AllCustomersTable.module.css?1718","components/AllCustomers/AllCustomersTable.tsx","pages/CustomersDataPage/CustomersDataPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"FilterForm_wrap__dKOTC\",\"inputWrap\":\"FilterForm_inputWrap__7OFkS\",\"icon\":\"FilterForm_icon__23iPD\",\"input\":\"FilterForm_input__NJviq\",\"errormessage\":\"FilterForm_errormessage__ntEtl\",\"button\":\"FilterForm_button__2yayb\"};","import css from \"./FilterForm.module.css\";\n\nimport { useForm } from \"react-hook-form\";\n\nimport Icon from \"../Icon\";\nimport { FC } from \"react\";\n\ninterface IForms {\n  name: string;\n}\n\ninterface IProps {\n  setSearchQuery: (value: string) => void;\n  placeholder: string;\n}\n\nconst FilterForm: FC<IProps> = ({ setSearchQuery, placeholder }) => {\n  const { register, handleSubmit } = useForm<IForms>();\n  const onSubmit = (data: IForms) => {\n    setSearchQuery(data.name);\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div className={css.wrap}>\n        <input\n          {...register(\"name\")}\n          className={css.input}\n          placeholder={placeholder}\n        />\n\n        <button type=\"submit\" className={css.button}>\n          <div className={css.icon}>\n            <Icon name=\"filter\" width={14} height={14} />\n          </div>\n          Filter\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default FilterForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"CustomersDataPage_container__aHqXc\"};","// extracted by mini-css-extract-plugin\nexport default {\"table\":\"AllCustomersTable_table__PSBKH\",\"header\":\"AllCustomersTable_header__maKLA\",\"subheader\":\"AllCustomersTable_subheader__h0Dd7\",\"row\":\"AllCustomersTable_row__Ir6db\",\"cellWrap\":\"AllCustomersTable_cellWrap__6UH-R\",\"avatar\":\"AllCustomersTable_avatar__JQDfn\",\"noResults\":\"AllCustomersTable_noResults__OZ4yU\",\"col-name\":\"AllCustomersTable_col-name__y+yg7\",\"col-email\":\"AllCustomersTable_col-email__2w+TJ\",\"col-address\":\"AllCustomersTable_col-address__L0PN9\",\"col-phone\":\"AllCustomersTable_col-phone__oOE1D\",\"col-date\":\"AllCustomersTable_col-date__rSJpv\"};","import {\n  getCoreRowModel,\n  ColumnDef,\n  flexRender,\n  useReactTable,\n} from \"@tanstack/react-table\";\nimport css from \"./AllCustomersTable.module.css\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { customers } from \"../../data/customers\";\n\nexport interface Person {\n  avatar: string | undefined;\n  name: string;\n  email: string;\n  address: string;\n  phone: string;\n  date: string;\n}\n\nconst AllCustomersTable = ({ searchQuery }: { searchQuery: string }) => {\n  const columns: ColumnDef<Person>[] = [\n    {\n      header: \"Customers Data\",\n      footer: (props) => props.column.id,\n      columns: [\n        {\n          accessorKey: \"name\",\n          header: \"Name\",\n          cell: ({ row }) => (\n            <div className={css.cellWrap}>\n              <img\n                src={row.original.avatar}\n                alt={row.original.name}\n                className={css.avatar}\n              />\n              {row.original.name}\n            </div>\n          ),\n          footer: (props) => props.column.id,\n        },\n        {\n          accessorKey: \"email\",\n          header: \"Email\",\n          footer: (props) => props.column.id,\n        },\n        {\n          accessorKey: \"address\",\n          header: \"Address\",\n          footer: (props) => props.column.id,\n        },\n        {\n          accessorKey: \"phone\",\n          header: \"Phone\",\n          footer: (props) => props.column.id,\n        },\n        {\n          accessorKey: \"date\",\n          header: \"Register date\",\n          footer: (props) => props.column.id,\n        },\n      ],\n    },\n  ];\n\n  const myCustomers = customers.map((customer) => {\n    return {\n      avatar: customer.image || customer.photo,\n      name: customer.name,\n      email: customer.email,\n      address: customer.address,\n      phone: customer.phone,\n      date: customer.register_date,\n    };\n  });\n\n  const data = useMemo(() => myCustomers, [myCustomers]);\n\n  const [filteredData, setFilteredData] = useState(data);\n\n  useEffect(() => {\n    const lowercasedQuery = searchQuery.toLowerCase();\n    setFilteredData(\n      data.filter((item) => item.name.toLowerCase().includes(lowercasedQuery))\n    );\n  }, [searchQuery, data]);\n\n  const table = useReactTable({\n    data: filteredData,\n    columns,\n    enableColumnResizing: true,\n    columnResizeMode: \"onChange\",\n    getCoreRowModel: getCoreRowModel(),\n    debugTable: true,\n    debugHeaders: true,\n    debugColumns: true,\n  });\n\n  return (\n    <>\n      <table className={css.table}>\n        <thead>\n          {table.getHeaderGroups().map((headerGroup, index) => (\n            <tr\n              key={headerGroup.id}\n              className={index === 0 ? css.header : css.subheader}\n            >\n              {headerGroup.headers.map((header) => (\n                <th\n                  key={header.id}\n                  colSpan={header.colSpan}\n                  className={index === 0 ? css.header : css.subheader}\n                  style={{ width: header.getSize() }}\n                >\n                  {header.isPlaceholder\n                    ? null\n                    : flexRender(\n                        header.column.columnDef.header,\n                        header.getContext()\n                      )}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody>\n          {table.getRowModel().rows.map((row) => {\n            return (\n              <tr key={row.id}>\n                {row.getVisibleCells().map((cell) => {\n                  return (\n                    <td\n                      key={cell.id}\n                      className={`${css.row} ${\n                        cell.column.id === \"name\"\n                          ? css[\"col-name\"]\n                          : cell.column.id === \"email\"\n                          ? css[\"col-email\"]\n                          : cell.column.id === \"address\"\n                          ? css[\"col-address\"]\n                          : cell.column.id === \"phone\"\n                          ? css[\"col-phone\"]\n                          : cell.column.id === \"date\"\n                          ? css[\"col-date\"]\n                          : \"\"\n                      }`}\n                      style={{ width: cell.column.getSize() }}\n                    >\n                      {flexRender(\n                        cell.column.columnDef.cell,\n                        cell.getContext()\n                      )}\n                    </td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      {filteredData.length === 0 && (\n        <div className={css.noResults}>\n          No results found for your search query.\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default AllCustomersTable;\n","import React, { useState } from \"react\";\nimport css from \"./CustomersDataPage.module.css\";\nimport FilterForm from \"../../components/FilterForm/FilterForm\";\nimport AllCustomersTable from \"../../components/AllCustomers/AllCustomersTable\";\n\nconst CustomersDataPage = () => {\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  return (\n    <section className={css.container}>\n      <FilterForm setSearchQuery={setSearchQuery} placeholder=\"User name\" />\n      <AllCustomersTable searchQuery={searchQuery} />\n    </section>\n  );\n};\n\nexport default CustomersDataPage;\n"],"names":["_ref","setSearchQuery","placeholder","register","handleSubmit","useForm","_jsx","onSubmit","data","name","children","_jsxs","className","css","type","Icon","width","height","searchQuery","columns","header","footer","props","column","id","accessorKey","cell","_ref2","row","src","original","avatar","alt","myCustomers","customers","map","customer","image","photo","email","address","phone","date","register_date","useMemo","filteredData","setFilteredData","useState","useEffect","lowercasedQuery","toLowerCase","filter","item","includes","table","useReactTable","enableColumnResizing","columnResizeMode","getCoreRowModel","debugTable","debugHeaders","debugColumns","_Fragment","getHeaderGroups","headerGroup","index","headers","colSpan","style","getSize","isPlaceholder","flexRender","columnDef","getContext","getRowModel","rows","getVisibleCells","concat","length","CustomersDataPage","FilterForm","AllCustomersTable"],"sourceRoot":""}